// ==============================================================
// RTL generated by Vivado(TM) HLS - High-Level Synthesis from C, C++ and OpenCL
// Version: 2019.2
// Copyright (C) 1986-2019 Xilinx, Inc. All Rights Reserved.
// 
// ===========================================================

`timescale 1 ns / 1 ps 

(* CORE_GENERATION_INFO="geo_dist,hls_ip_2019_2,{HLS_INPUT_TYPE=cxx,HLS_INPUT_FLOAT=0,HLS_INPUT_FIXED=1,HLS_INPUT_PART=xc7z020i-clg400-1L,HLS_INPUT_CLOCK=10.000000,HLS_INPUT_ARCH=others,HLS_SYN_CLOCK=8.842937,HLS_SYN_LAT=135,HLS_SYN_TPT=none,HLS_SYN_MEM=20,HLS_SYN_DSP=15,HLS_SYN_FF=11204,HLS_SYN_LUT=17198,HLS_VERSION=2019_2}" *)

module geo_dist (
        ap_clk,
        ap_rst_n,
        s_axi_geo_dist_if_AWVALID,
        s_axi_geo_dist_if_AWREADY,
        s_axi_geo_dist_if_AWADDR,
        s_axi_geo_dist_if_WVALID,
        s_axi_geo_dist_if_WREADY,
        s_axi_geo_dist_if_WDATA,
        s_axi_geo_dist_if_WSTRB,
        s_axi_geo_dist_if_ARVALID,
        s_axi_geo_dist_if_ARREADY,
        s_axi_geo_dist_if_ARADDR,
        s_axi_geo_dist_if_RVALID,
        s_axi_geo_dist_if_RREADY,
        s_axi_geo_dist_if_RDATA,
        s_axi_geo_dist_if_RRESP,
        s_axi_geo_dist_if_BVALID,
        s_axi_geo_dist_if_BREADY,
        s_axi_geo_dist_if_BRESP
);

parameter    ap_ST_fsm_state1 = 9'd1;
parameter    ap_ST_fsm_state2 = 9'd2;
parameter    ap_ST_fsm_state3 = 9'd4;
parameter    ap_ST_fsm_state4 = 9'd8;
parameter    ap_ST_fsm_state5 = 9'd16;
parameter    ap_ST_fsm_state6 = 9'd32;
parameter    ap_ST_fsm_state7 = 9'd64;
parameter    ap_ST_fsm_state8 = 9'd128;
parameter    ap_ST_fsm_state9 = 9'd256;
parameter    C_S_AXI_GEO_DIST_IF_DATA_WIDTH = 32;
parameter    C_S_AXI_GEO_DIST_IF_ADDR_WIDTH = 6;
parameter    C_S_AXI_DATA_WIDTH = 32;

parameter C_S_AXI_GEO_DIST_IF_WSTRB_WIDTH = (32 / 8);
parameter C_S_AXI_WSTRB_WIDTH = (32 / 8);

input   ap_clk;
input   ap_rst_n;
input   s_axi_geo_dist_if_AWVALID;
output   s_axi_geo_dist_if_AWREADY;
input  [C_S_AXI_GEO_DIST_IF_ADDR_WIDTH - 1:0] s_axi_geo_dist_if_AWADDR;
input   s_axi_geo_dist_if_WVALID;
output   s_axi_geo_dist_if_WREADY;
input  [C_S_AXI_GEO_DIST_IF_DATA_WIDTH - 1:0] s_axi_geo_dist_if_WDATA;
input  [C_S_AXI_GEO_DIST_IF_WSTRB_WIDTH - 1:0] s_axi_geo_dist_if_WSTRB;
input   s_axi_geo_dist_if_ARVALID;
output   s_axi_geo_dist_if_ARREADY;
input  [C_S_AXI_GEO_DIST_IF_ADDR_WIDTH - 1:0] s_axi_geo_dist_if_ARADDR;
output   s_axi_geo_dist_if_RVALID;
input   s_axi_geo_dist_if_RREADY;
output  [C_S_AXI_GEO_DIST_IF_DATA_WIDTH - 1:0] s_axi_geo_dist_if_RDATA;
output  [1:0] s_axi_geo_dist_if_RRESP;
output   s_axi_geo_dist_if_BVALID;
input   s_axi_geo_dist_if_BREADY;
output  [1:0] s_axi_geo_dist_if_BRESP;

 reg    ap_rst_n_inv;
wire   [19:0] lat_a_V;
reg   [19:0] lat_a_V_0_data_reg;
reg    lat_a_V_0_vld_reg;
reg    lat_a_V_0_ack_out;
wire   [19:0] lon_a_V;
reg  signed [19:0] lon_a_V_0_data_reg;
reg    lon_a_V_0_vld_reg;
reg    lon_a_V_0_ack_out;
wire   [19:0] lat_b_V;
reg   [19:0] lat_b_V_0_data_reg;
reg    lat_b_V_0_vld_reg;
reg    lat_b_V_0_ack_out;
wire   [19:0] lon_b_V;
reg  signed [19:0] lon_b_V_0_data_reg;
reg    lon_b_V_0_vld_reg;
reg    lon_b_V_0_ack_out;
reg   [19:0] result_V_1_data_reg;
reg   [19:0] result_V_1_data_in;
reg    result_V_1_vld_reg;
reg    result_V_1_vld_in;
reg    result_V_1_ack_in;
wire  signed [28:0] grp_fu_270_p3;
reg   [28:0] r_V_reg_312;
(* fsm_encoding = "none" *) reg   [8:0] ap_CS_fsm;
wire    ap_CS_fsm_state2;
wire  signed [28:0] grp_fu_278_p3;
reg   [28:0] r_V_1_reg_317;
wire  signed [28:0] grp_fu_286_p3;
reg   [28:0] r_V_2_reg_322;
reg  signed [13:0] trunc_ln_reg_327;
wire    ap_CS_fsm_state4;
wire    grp_generic_sincos_fu_110_ap_ready;
wire    grp_generic_sincos_fu_110_ap_done;
wire    grp_generic_sincos_fu_117_ap_ready;
wire    grp_generic_sincos_fu_117_ap_done;
wire    grp_generic_sincos_fu_124_ap_ready;
wire    grp_generic_sincos_fu_124_ap_done;
reg    ap_block_state4_on_subcall_done;
reg  signed [13:0] trunc_ln708_1_reg_333;
reg  signed [13:0] trunc_ln708_3_reg_339;
reg  signed [15:0] tmp_reg_344;
wire    ap_CS_fsm_state5;
wire  signed [18:0] sext_ln708_1_fu_223_p1;
reg   [18:0] sext_ln708_1_reg_350;
wire    ap_CS_fsm_state6;
wire  signed [19:0] sext_ln708_fu_227_p1;
wire   [14:0] out_V_3_fu_231_p2;
reg   [14:0] out_V_3_reg_360;
wire    ap_CS_fsm_state7;
wire    grp_generic_asin_20_8_s_fu_103_ap_ready;
wire    grp_generic_asin_20_8_s_fu_103_ap_done;
reg   [0:0] tmp_1_reg_365;
wire   [14:0] out_V_fu_245_p2;
reg   [14:0] out_V_reg_370;
wire    ap_CS_fsm_state8;
wire    grp_generic_asin_20_8_s_fu_103_ap_start;
wire    grp_generic_asin_20_8_s_fu_103_ap_idle;
wire   [14:0] grp_generic_asin_20_8_s_fu_103_ap_return;
wire    grp_generic_sincos_fu_110_ap_start;
wire    grp_generic_sincos_fu_110_ap_idle;
wire   [25:0] grp_generic_sincos_fu_110_ap_return;
wire    grp_generic_sincos_fu_117_ap_start;
wire    grp_generic_sincos_fu_117_ap_idle;
wire   [25:0] grp_generic_sincos_fu_117_ap_return;
wire    grp_generic_sincos_fu_124_ap_start;
wire    grp_generic_sincos_fu_124_ap_idle;
wire   [25:0] grp_generic_sincos_fu_124_ap_return;
reg    grp_generic_asin_20_8_s_fu_103_ap_start_reg;
reg    grp_generic_sincos_fu_110_ap_start_reg;
wire    ap_CS_fsm_state3;
reg    grp_generic_sincos_fu_117_ap_start_reg;
reg    grp_generic_sincos_fu_124_ap_start_reg;
wire  signed [25:0] rhs_V_2_fu_186_p3;
wire   [25:0] rhs_V_3_fu_197_p3;
wire  signed [28:0] grp_fu_294_p4;
wire  signed [28:0] sext_ln728_1_fu_204_p1;
(* use_dsp48 = "no" *) wire   [28:0] ret_V_5_fu_208_p2;
wire  signed [14:0] out_V_4_fu_251_p3;
wire  signed [31:0] r_V_6_fu_305_p2;
wire  signed [19:0] grp_fu_270_p0;
wire  signed [20:0] lhs_V_fu_131_p1;
wire  signed [19:0] grp_fu_270_p1;
wire  signed [20:0] rhs_V_fu_135_p1;
wire   [7:0] grp_fu_270_p2;
wire  signed [19:0] grp_fu_278_p0;
wire  signed [19:0] grp_fu_278_p1;
wire   [7:0] grp_fu_278_p2;
wire   [7:0] grp_fu_286_p2;
wire  signed [19:0] r_V_6_fu_305_p1;
wire    ap_CS_fsm_state9;
reg   [8:0] ap_NS_fsm;

// power-on initialization
initial begin
#0 lat_a_V_0_data_reg = 20'd0;
#0 lat_a_V_0_vld_reg = 1'b0;
#0 lon_a_V_0_data_reg = 20'd0;
#0 lon_a_V_0_vld_reg = 1'b0;
#0 lat_b_V_0_data_reg = 20'd0;
#0 lat_b_V_0_vld_reg = 1'b0;
#0 lon_b_V_0_data_reg = 20'd0;
#0 lon_b_V_0_vld_reg = 1'b0;
#0 result_V_1_data_reg = 20'd0;
#0 result_V_1_vld_reg = 1'b0;
#0 ap_CS_fsm = 9'd1;
#0 grp_generic_asin_20_8_s_fu_103_ap_start_reg = 1'b0;
#0 grp_generic_sincos_fu_110_ap_start_reg = 1'b0;
#0 grp_generic_sincos_fu_117_ap_start_reg = 1'b0;
#0 grp_generic_sincos_fu_124_ap_start_reg = 1'b0;
end

geo_dist_geo_dist_if_s_axi #(
    .C_S_AXI_ADDR_WIDTH( C_S_AXI_GEO_DIST_IF_ADDR_WIDTH ),
    .C_S_AXI_DATA_WIDTH( C_S_AXI_GEO_DIST_IF_DATA_WIDTH ))
geo_dist_geo_dist_if_s_axi_U(
    .AWVALID(s_axi_geo_dist_if_AWVALID),
    .AWREADY(s_axi_geo_dist_if_AWREADY),
    .AWADDR(s_axi_geo_dist_if_AWADDR),
    .WVALID(s_axi_geo_dist_if_WVALID),
    .WREADY(s_axi_geo_dist_if_WREADY),
    .WDATA(s_axi_geo_dist_if_WDATA),
    .WSTRB(s_axi_geo_dist_if_WSTRB),
    .ARVALID(s_axi_geo_dist_if_ARVALID),
    .ARREADY(s_axi_geo_dist_if_ARREADY),
    .ARADDR(s_axi_geo_dist_if_ARADDR),
    .RVALID(s_axi_geo_dist_if_RVALID),
    .RREADY(s_axi_geo_dist_if_RREADY),
    .RDATA(s_axi_geo_dist_if_RDATA),
    .RRESP(s_axi_geo_dist_if_RRESP),
    .BVALID(s_axi_geo_dist_if_BVALID),
    .BREADY(s_axi_geo_dist_if_BREADY),
    .BRESP(s_axi_geo_dist_if_BRESP),
    .ACLK(ap_clk),
    .ARESET(ap_rst_n_inv),
    .ACLK_EN(1'b1),
    .lat_a_V(lat_a_V),
    .lon_a_V(lon_a_V),
    .lat_b_V(lat_b_V),
    .lon_b_V(lon_b_V),
    .result_V(result_V_1_data_reg),
    .result_V_ap_vld(result_V_1_vld_reg)
);

generic_asin_20_8_s grp_generic_asin_20_8_s_fu_103(
    .ap_clk(ap_clk),
    .ap_rst(ap_rst_n_inv),
    .ap_start(grp_generic_asin_20_8_s_fu_103_ap_start),
    .ap_done(grp_generic_asin_20_8_s_fu_103_ap_done),
    .ap_idle(grp_generic_asin_20_8_s_fu_103_ap_idle),
    .ap_ready(grp_generic_asin_20_8_s_fu_103_ap_ready),
    .in_V(sext_ln708_1_reg_350),
    .ap_return(grp_generic_asin_20_8_s_fu_103_ap_return)
);

generic_sincos grp_generic_sincos_fu_110(
    .ap_clk(ap_clk),
    .ap_rst(ap_rst_n_inv),
    .ap_start(grp_generic_sincos_fu_110_ap_start),
    .ap_done(grp_generic_sincos_fu_110_ap_done),
    .ap_idle(grp_generic_sincos_fu_110_ap_idle),
    .ap_ready(grp_generic_sincos_fu_110_ap_ready),
    .in_V(r_V_reg_312),
    .ap_return(grp_generic_sincos_fu_110_ap_return)
);

generic_sincos grp_generic_sincos_fu_117(
    .ap_clk(ap_clk),
    .ap_rst(ap_rst_n_inv),
    .ap_start(grp_generic_sincos_fu_117_ap_start),
    .ap_done(grp_generic_sincos_fu_117_ap_done),
    .ap_idle(grp_generic_sincos_fu_117_ap_idle),
    .ap_ready(grp_generic_sincos_fu_117_ap_ready),
    .in_V(r_V_1_reg_317),
    .ap_return(grp_generic_sincos_fu_117_ap_return)
);

generic_sincos grp_generic_sincos_fu_124(
    .ap_clk(ap_clk),
    .ap_rst(ap_rst_n_inv),
    .ap_start(grp_generic_sincos_fu_124_ap_start),
    .ap_done(grp_generic_sincos_fu_124_ap_done),
    .ap_idle(grp_generic_sincos_fu_124_ap_idle),
    .ap_ready(grp_generic_sincos_fu_124_ap_ready),
    .in_V(r_V_2_reg_322),
    .ap_return(grp_generic_sincos_fu_124_ap_return)
);

geo_dist_am_submujbC #(
    .ID( 1 ),
    .NUM_STAGE( 1 ),
    .din0_WIDTH( 20 ),
    .din1_WIDTH( 20 ),
    .din2_WIDTH( 8 ),
    .dout_WIDTH( 29 ))
geo_dist_am_submujbC_U15(
    .din0(grp_fu_270_p0),
    .din1(grp_fu_270_p1),
    .din2(grp_fu_270_p2),
    .dout(grp_fu_270_p3)
);

geo_dist_am_addmukbM #(
    .ID( 1 ),
    .NUM_STAGE( 1 ),
    .din0_WIDTH( 20 ),
    .din1_WIDTH( 20 ),
    .din2_WIDTH( 8 ),
    .dout_WIDTH( 29 ))
geo_dist_am_addmukbM_U16(
    .din0(grp_fu_278_p0),
    .din1(grp_fu_278_p1),
    .din2(grp_fu_278_p2),
    .dout(grp_fu_278_p3)
);

geo_dist_am_submujbC #(
    .ID( 1 ),
    .NUM_STAGE( 1 ),
    .din0_WIDTH( 20 ),
    .din1_WIDTH( 20 ),
    .din2_WIDTH( 8 ),
    .dout_WIDTH( 29 ))
geo_dist_am_submujbC_U17(
    .din0(lon_a_V_0_data_reg),
    .din1(lon_b_V_0_data_reg),
    .din2(grp_fu_286_p2),
    .dout(grp_fu_286_p3)
);

geo_dist_ama_addmlbW #(
    .ID( 1 ),
    .NUM_STAGE( 1 ),
    .din0_WIDTH( 14 ),
    .din1_WIDTH( 14 ),
    .din2_WIDTH( 14 ),
    .din3_WIDTH( 26 ),
    .dout_WIDTH( 29 ))
geo_dist_ama_addmlbW_U18(
    .din0(trunc_ln_reg_327),
    .din1(trunc_ln708_1_reg_333),
    .din2(trunc_ln708_3_reg_339),
    .din3(rhs_V_2_fu_186_p3),
    .dout(grp_fu_294_p4)
);

geo_dist_mul_mul_mb6 #(
    .ID( 1 ),
    .NUM_STAGE( 1 ),
    .din0_WIDTH( 15 ),
    .din1_WIDTH( 20 ),
    .dout_WIDTH( 32 ))
geo_dist_mul_mul_mb6_U19(
    .din0(out_V_4_fu_251_p3),
    .din1(r_V_6_fu_305_p1),
    .dout(r_V_6_fu_305_p2)
);

always @ (posedge ap_clk) begin
    if (ap_rst_n_inv == 1'b1) begin
        ap_CS_fsm <= ap_ST_fsm_state1;
    end else begin
        ap_CS_fsm <= ap_NS_fsm;
    end
end

always @ (posedge ap_clk) begin
    if (ap_rst_n_inv == 1'b1) begin
        grp_generic_asin_20_8_s_fu_103_ap_start_reg <= 1'b0;
    end else begin
        if ((1'b1 == ap_CS_fsm_state6)) begin
            grp_generic_asin_20_8_s_fu_103_ap_start_reg <= 1'b1;
        end else if ((grp_generic_asin_20_8_s_fu_103_ap_ready == 1'b1)) begin
            grp_generic_asin_20_8_s_fu_103_ap_start_reg <= 1'b0;
        end
    end
end

always @ (posedge ap_clk) begin
    if (ap_rst_n_inv == 1'b1) begin
        grp_generic_sincos_fu_110_ap_start_reg <= 1'b0;
    end else begin
        if ((1'b1 == ap_CS_fsm_state3)) begin
            grp_generic_sincos_fu_110_ap_start_reg <= 1'b1;
        end else if ((grp_generic_sincos_fu_110_ap_ready == 1'b1)) begin
            grp_generic_sincos_fu_110_ap_start_reg <= 1'b0;
        end
    end
end

always @ (posedge ap_clk) begin
    if (ap_rst_n_inv == 1'b1) begin
        grp_generic_sincos_fu_117_ap_start_reg <= 1'b0;
    end else begin
        if ((1'b1 == ap_CS_fsm_state3)) begin
            grp_generic_sincos_fu_117_ap_start_reg <= 1'b1;
        end else if ((grp_generic_sincos_fu_117_ap_ready == 1'b1)) begin
            grp_generic_sincos_fu_117_ap_start_reg <= 1'b0;
        end
    end
end

always @ (posedge ap_clk) begin
    if (ap_rst_n_inv == 1'b1) begin
        grp_generic_sincos_fu_124_ap_start_reg <= 1'b0;
    end else begin
        if ((1'b1 == ap_CS_fsm_state3)) begin
            grp_generic_sincos_fu_124_ap_start_reg <= 1'b1;
        end else if ((grp_generic_sincos_fu_124_ap_ready == 1'b1)) begin
            grp_generic_sincos_fu_124_ap_start_reg <= 1'b0;
        end
    end
end

always @ (posedge ap_clk) begin
    if (((result_V_1_vld_reg == 1'b0) & (result_V_1_vld_in == 1'b1))) begin
        result_V_1_vld_reg <= 1'b1;
    end else if (((result_V_1_vld_in == 1'b0) & (1'b1 == 1'b1) & (result_V_1_vld_reg == 1'b1))) begin
        result_V_1_vld_reg <= 1'b0;
    end
end

always @ (posedge ap_clk) begin
    if ((((lat_a_V_0_vld_reg == 1'b0) & (1'b1 == 1'b1)) | ((lat_a_V_0_ack_out == 1'b1) & (1'b1 == 1'b1) & (lat_a_V_0_vld_reg == 1'b1)))) begin
        lat_a_V_0_data_reg <= lat_a_V;
    end
end

always @ (posedge ap_clk) begin
    if ((((lat_b_V_0_vld_reg == 1'b0) & (1'b1 == 1'b1)) | ((lat_b_V_0_ack_out == 1'b1) & (1'b1 == 1'b1) & (lat_b_V_0_vld_reg == 1'b1)))) begin
        lat_b_V_0_data_reg <= lat_b_V;
    end
end

always @ (posedge ap_clk) begin
    if ((((lon_a_V_0_vld_reg == 1'b0) & (1'b1 == 1'b1)) | ((lon_a_V_0_ack_out == 1'b1) & (1'b1 == 1'b1) & (lon_a_V_0_vld_reg == 1'b1)))) begin
        lon_a_V_0_data_reg <= lon_a_V;
    end
end

always @ (posedge ap_clk) begin
    if ((((lon_b_V_0_vld_reg == 1'b0) & (1'b1 == 1'b1)) | ((lon_b_V_0_ack_out == 1'b1) & (1'b1 == 1'b1) & (lon_b_V_0_vld_reg == 1'b1)))) begin
        lon_b_V_0_data_reg <= lon_b_V;
    end
end

always @ (posedge ap_clk) begin
    if (((grp_generic_asin_20_8_s_fu_103_ap_done == 1'b1) & (1'b1 == ap_CS_fsm_state7))) begin
        out_V_3_reg_360 <= out_V_3_fu_231_p2;
        out_V_reg_370 <= out_V_fu_245_p2;
        tmp_1_reg_365 <= out_V_3_fu_231_p2[32'd14];
    end
end

always @ (posedge ap_clk) begin
    if ((1'b1 == ap_CS_fsm_state2)) begin
        r_V_1_reg_317 <= grp_fu_278_p3;
        r_V_2_reg_322 <= grp_fu_286_p3;
        r_V_reg_312 <= grp_fu_270_p3;
    end
end

always @ (posedge ap_clk) begin
    if ((((result_V_1_vld_reg == 1'b0) & (result_V_1_vld_in == 1'b1)) | ((1'b1 == 1'b1) & (result_V_1_vld_in == 1'b1) & (result_V_1_vld_reg == 1'b1)))) begin
        result_V_1_data_reg <= result_V_1_data_in;
    end
end

always @ (posedge ap_clk) begin
    if ((1'b1 == ap_CS_fsm_state6)) begin
        sext_ln708_1_reg_350 <= sext_ln708_1_fu_223_p1;
    end
end

always @ (posedge ap_clk) begin
    if ((1'b1 == ap_CS_fsm_state5)) begin
        tmp_reg_344 <= {{ret_V_5_fu_208_p2[28:13]}};
    end
end

always @ (posedge ap_clk) begin
    if (((1'b1 == ap_CS_fsm_state4) & (1'b0 == ap_block_state4_on_subcall_done))) begin
        trunc_ln708_1_reg_333 <= {{grp_generic_sincos_fu_117_ap_return[25:12]}};
        trunc_ln708_3_reg_339 <= {{grp_generic_sincos_fu_124_ap_return[25:12]}};
        trunc_ln_reg_327 <= {{grp_generic_sincos_fu_110_ap_return[25:12]}};
    end
end

always @ (*) begin
    if (((1'b1 == ap_CS_fsm_state2) | ((1'b1 == ap_CS_fsm_state9) & (result_V_1_ack_in == 1'b1)))) begin
        lat_a_V_0_ack_out = 1'b1;
    end else begin
        lat_a_V_0_ack_out = 1'b0;
    end
end

always @ (*) begin
    if (((1'b1 == ap_CS_fsm_state2) | ((1'b1 == ap_CS_fsm_state9) & (result_V_1_ack_in == 1'b1)))) begin
        lat_b_V_0_ack_out = 1'b1;
    end else begin
        lat_b_V_0_ack_out = 1'b0;
    end
end

always @ (*) begin
    if (((1'b1 == ap_CS_fsm_state2) | ((1'b1 == ap_CS_fsm_state9) & (result_V_1_ack_in == 1'b1)))) begin
        lon_a_V_0_ack_out = 1'b1;
    end else begin
        lon_a_V_0_ack_out = 1'b0;
    end
end

always @ (*) begin
    if (((1'b1 == ap_CS_fsm_state2) | ((1'b1 == ap_CS_fsm_state9) & (result_V_1_ack_in == 1'b1)))) begin
        lon_b_V_0_ack_out = 1'b1;
    end else begin
        lon_b_V_0_ack_out = 1'b0;
    end
end

always @ (*) begin
    if (((result_V_1_vld_reg == 1'b0) | ((1'b1 == 1'b1) & (result_V_1_vld_reg == 1'b1)))) begin
        result_V_1_ack_in = 1'b1;
    end else begin
        result_V_1_ack_in = 1'b0;
    end
end

always @ (*) begin
    if ((1'b1 == ap_CS_fsm_state8)) begin
        result_V_1_data_in = {{r_V_6_fu_305_p2[31:12]}};
    end else if ((1'b1 == ap_CS_fsm_state6)) begin
        result_V_1_data_in = sext_ln708_fu_227_p1;
    end else begin
        result_V_1_data_in = 'bx;
    end
end

always @ (*) begin
    if (((1'b1 == ap_CS_fsm_state8) | (1'b1 == ap_CS_fsm_state6))) begin
        result_V_1_vld_in = 1'b1;
    end else begin
        result_V_1_vld_in = 1'b0;
    end
end

always @ (*) begin
    case (ap_CS_fsm)
        ap_ST_fsm_state1 : begin
            ap_NS_fsm = ap_ST_fsm_state2;
        end
        ap_ST_fsm_state2 : begin
            ap_NS_fsm = ap_ST_fsm_state3;
        end
        ap_ST_fsm_state3 : begin
            ap_NS_fsm = ap_ST_fsm_state4;
        end
        ap_ST_fsm_state4 : begin
            if (((1'b1 == ap_CS_fsm_state4) & (1'b0 == ap_block_state4_on_subcall_done))) begin
                ap_NS_fsm = ap_ST_fsm_state5;
            end else begin
                ap_NS_fsm = ap_ST_fsm_state4;
            end
        end
        ap_ST_fsm_state5 : begin
            ap_NS_fsm = ap_ST_fsm_state6;
        end
        ap_ST_fsm_state6 : begin
            ap_NS_fsm = ap_ST_fsm_state7;
        end
        ap_ST_fsm_state7 : begin
            if (((grp_generic_asin_20_8_s_fu_103_ap_done == 1'b1) & (1'b1 == ap_CS_fsm_state7))) begin
                ap_NS_fsm = ap_ST_fsm_state8;
            end else begin
                ap_NS_fsm = ap_ST_fsm_state7;
            end
        end
        ap_ST_fsm_state8 : begin
            ap_NS_fsm = ap_ST_fsm_state9;
        end
        ap_ST_fsm_state9 : begin
            if (((1'b1 == ap_CS_fsm_state9) & (result_V_1_ack_in == 1'b1))) begin
                ap_NS_fsm = ap_ST_fsm_state1;
            end else begin
                ap_NS_fsm = ap_ST_fsm_state9;
            end
        end
        default : begin
            ap_NS_fsm = 'bx;
        end
    endcase
end

assign ap_CS_fsm_state2 = ap_CS_fsm[32'd1];

assign ap_CS_fsm_state3 = ap_CS_fsm[32'd2];

assign ap_CS_fsm_state4 = ap_CS_fsm[32'd3];

assign ap_CS_fsm_state5 = ap_CS_fsm[32'd4];

assign ap_CS_fsm_state6 = ap_CS_fsm[32'd5];

assign ap_CS_fsm_state7 = ap_CS_fsm[32'd6];

assign ap_CS_fsm_state8 = ap_CS_fsm[32'd7];

assign ap_CS_fsm_state9 = ap_CS_fsm[32'd8];

always @ (*) begin
    ap_block_state4_on_subcall_done = ((grp_generic_sincos_fu_124_ap_done == 1'b0) | (grp_generic_sincos_fu_117_ap_done == 1'b0) | (grp_generic_sincos_fu_110_ap_done == 1'b0));
end

always @ (*) begin
    ap_rst_n_inv = ~ap_rst_n;
end

assign grp_fu_270_p0 = lhs_V_fu_131_p1;

assign grp_fu_270_p1 = rhs_V_fu_135_p1;

assign grp_fu_270_p2 = 29'd71;

assign grp_fu_278_p0 = lhs_V_fu_131_p1;

assign grp_fu_278_p1 = rhs_V_fu_135_p1;

assign grp_fu_278_p2 = 29'd71;

assign grp_fu_286_p2 = 29'd71;

assign grp_generic_asin_20_8_s_fu_103_ap_start = grp_generic_asin_20_8_s_fu_103_ap_start_reg;

assign grp_generic_sincos_fu_110_ap_start = grp_generic_sincos_fu_110_ap_start_reg;

assign grp_generic_sincos_fu_117_ap_start = grp_generic_sincos_fu_117_ap_start_reg;

assign grp_generic_sincos_fu_124_ap_start = grp_generic_sincos_fu_124_ap_start_reg;

assign lhs_V_fu_131_p1 = $signed(lat_a_V_0_data_reg);

assign out_V_3_fu_231_p2 = (15'd6433 - grp_generic_asin_20_8_s_fu_103_ap_return);

assign out_V_4_fu_251_p3 = ((tmp_1_reg_365[0:0] === 1'b1) ? out_V_reg_370 : out_V_3_reg_360);

assign out_V_fu_245_p2 = (15'd0 - out_V_3_fu_231_p2);

assign r_V_6_fu_305_p1 = 32'd4294675599;

assign ret_V_5_fu_208_p2 = ($signed(grp_fu_294_p4) - $signed(sext_ln728_1_fu_204_p1));

assign rhs_V_2_fu_186_p3 = {{trunc_ln_reg_327}, {12'd0}};

assign rhs_V_3_fu_197_p3 = {{trunc_ln708_1_reg_333}, {12'd0}};

assign rhs_V_fu_135_p1 = $signed(lat_b_V_0_data_reg);

assign sext_ln708_1_fu_223_p1 = tmp_reg_344;

assign sext_ln708_fu_227_p1 = tmp_reg_344;

assign sext_ln728_1_fu_204_p1 = $signed(rhs_V_3_fu_197_p3);

endmodule //geo_dist
