// ==============================================================
// RTL generated by Vivado(TM) HLS - High-Level Synthesis from C, C++ and OpenCL
// Version: 2019.2
// Copyright (C) 1986-2019 Xilinx, Inc. All Rights Reserved.
// 
// ===========================================================

`timescale 1 ns / 1 ps 

module generic_asin_20_8_s (
        ap_clk,
        ap_rst,
        ap_start,
        ap_done,
        ap_idle,
        ap_ready,
        in_V,
        ap_return
);

parameter    ap_ST_fsm_state1 = 95'd1;
parameter    ap_ST_fsm_state2 = 95'd2;
parameter    ap_ST_fsm_state3 = 95'd4;
parameter    ap_ST_fsm_state4 = 95'd8;
parameter    ap_ST_fsm_state5 = 95'd16;
parameter    ap_ST_fsm_state6 = 95'd32;
parameter    ap_ST_fsm_state7 = 95'd64;
parameter    ap_ST_fsm_state8 = 95'd128;
parameter    ap_ST_fsm_state9 = 95'd256;
parameter    ap_ST_fsm_state10 = 95'd512;
parameter    ap_ST_fsm_state11 = 95'd1024;
parameter    ap_ST_fsm_state12 = 95'd2048;
parameter    ap_ST_fsm_state13 = 95'd4096;
parameter    ap_ST_fsm_state14 = 95'd8192;
parameter    ap_ST_fsm_state15 = 95'd16384;
parameter    ap_ST_fsm_state16 = 95'd32768;
parameter    ap_ST_fsm_state17 = 95'd65536;
parameter    ap_ST_fsm_state18 = 95'd131072;
parameter    ap_ST_fsm_state19 = 95'd262144;
parameter    ap_ST_fsm_state20 = 95'd524288;
parameter    ap_ST_fsm_state21 = 95'd1048576;
parameter    ap_ST_fsm_state22 = 95'd2097152;
parameter    ap_ST_fsm_state23 = 95'd4194304;
parameter    ap_ST_fsm_state24 = 95'd8388608;
parameter    ap_ST_fsm_state25 = 95'd16777216;
parameter    ap_ST_fsm_state26 = 95'd33554432;
parameter    ap_ST_fsm_state27 = 95'd67108864;
parameter    ap_ST_fsm_state28 = 95'd134217728;
parameter    ap_ST_fsm_state29 = 95'd268435456;
parameter    ap_ST_fsm_state30 = 95'd536870912;
parameter    ap_ST_fsm_state31 = 95'd1073741824;
parameter    ap_ST_fsm_state32 = 95'd2147483648;
parameter    ap_ST_fsm_state33 = 95'd4294967296;
parameter    ap_ST_fsm_state34 = 95'd8589934592;
parameter    ap_ST_fsm_state35 = 95'd17179869184;
parameter    ap_ST_fsm_state36 = 95'd34359738368;
parameter    ap_ST_fsm_state37 = 95'd68719476736;
parameter    ap_ST_fsm_state38 = 95'd137438953472;
parameter    ap_ST_fsm_state39 = 95'd274877906944;
parameter    ap_ST_fsm_state40 = 95'd549755813888;
parameter    ap_ST_fsm_state41 = 95'd1099511627776;
parameter    ap_ST_fsm_state42 = 95'd2199023255552;
parameter    ap_ST_fsm_state43 = 95'd4398046511104;
parameter    ap_ST_fsm_state44 = 95'd8796093022208;
parameter    ap_ST_fsm_state45 = 95'd17592186044416;
parameter    ap_ST_fsm_state46 = 95'd35184372088832;
parameter    ap_ST_fsm_state47 = 95'd70368744177664;
parameter    ap_ST_fsm_state48 = 95'd140737488355328;
parameter    ap_ST_fsm_state49 = 95'd281474976710656;
parameter    ap_ST_fsm_state50 = 95'd562949953421312;
parameter    ap_ST_fsm_state51 = 95'd1125899906842624;
parameter    ap_ST_fsm_state52 = 95'd2251799813685248;
parameter    ap_ST_fsm_state53 = 95'd4503599627370496;
parameter    ap_ST_fsm_state54 = 95'd9007199254740992;
parameter    ap_ST_fsm_state55 = 95'd18014398509481984;
parameter    ap_ST_fsm_state56 = 95'd36028797018963968;
parameter    ap_ST_fsm_state57 = 95'd72057594037927936;
parameter    ap_ST_fsm_state58 = 95'd144115188075855872;
parameter    ap_ST_fsm_state59 = 95'd288230376151711744;
parameter    ap_ST_fsm_state60 = 95'd576460752303423488;
parameter    ap_ST_fsm_state61 = 95'd1152921504606846976;
parameter    ap_ST_fsm_state62 = 95'd2305843009213693952;
parameter    ap_ST_fsm_state63 = 95'd4611686018427387904;
parameter    ap_ST_fsm_state64 = 95'd9223372036854775808;
parameter    ap_ST_fsm_state65 = 95'd18446744073709551616;
parameter    ap_ST_fsm_state66 = 95'd36893488147419103232;
parameter    ap_ST_fsm_state67 = 95'd73786976294838206464;
parameter    ap_ST_fsm_state68 = 95'd147573952589676412928;
parameter    ap_ST_fsm_state69 = 95'd295147905179352825856;
parameter    ap_ST_fsm_state70 = 95'd590295810358705651712;
parameter    ap_ST_fsm_state71 = 95'd1180591620717411303424;
parameter    ap_ST_fsm_state72 = 95'd2361183241434822606848;
parameter    ap_ST_fsm_state73 = 95'd4722366482869645213696;
parameter    ap_ST_fsm_state74 = 95'd9444732965739290427392;
parameter    ap_ST_fsm_state75 = 95'd18889465931478580854784;
parameter    ap_ST_fsm_state76 = 95'd37778931862957161709568;
parameter    ap_ST_fsm_state77 = 95'd75557863725914323419136;
parameter    ap_ST_fsm_state78 = 95'd151115727451828646838272;
parameter    ap_ST_fsm_state79 = 95'd302231454903657293676544;
parameter    ap_ST_fsm_state80 = 95'd604462909807314587353088;
parameter    ap_ST_fsm_state81 = 95'd1208925819614629174706176;
parameter    ap_ST_fsm_state82 = 95'd2417851639229258349412352;
parameter    ap_ST_fsm_state83 = 95'd4835703278458516698824704;
parameter    ap_ST_fsm_state84 = 95'd9671406556917033397649408;
parameter    ap_ST_fsm_state85 = 95'd19342813113834066795298816;
parameter    ap_ST_fsm_state86 = 95'd38685626227668133590597632;
parameter    ap_ST_fsm_state87 = 95'd77371252455336267181195264;
parameter    ap_ST_fsm_state88 = 95'd154742504910672534362390528;
parameter    ap_ST_fsm_state89 = 95'd309485009821345068724781056;
parameter    ap_ST_fsm_state90 = 95'd618970019642690137449562112;
parameter    ap_ST_fsm_state91 = 95'd1237940039285380274899124224;
parameter    ap_ST_fsm_state92 = 95'd2475880078570760549798248448;
parameter    ap_ST_fsm_state93 = 95'd4951760157141521099596496896;
parameter    ap_ST_fsm_state94 = 95'd9903520314283042199192993792;
parameter    ap_ST_fsm_state95 = 95'd19807040628566084398385987584;

input   ap_clk;
input   ap_rst;
input   ap_start;
output   ap_done;
output   ap_idle;
output   ap_ready;
input  [18:0] in_V;
output  [14:0] ap_return;

reg ap_done;
reg ap_idle;
reg ap_ready;
reg[14:0] ap_return;

(* fsm_encoding = "none" *) reg   [94:0] ap_CS_fsm;
wire    ap_CS_fsm_state1;
reg   [6:0] cordic_apfixed_circ_address0;
reg    cordic_apfixed_circ_ce0;
wire   [125:0] cordic_apfixed_circ_q0;
wire   [0:0] icmp_ln1498_fu_298_p2;
reg   [0:0] icmp_ln1498_reg_1278;
wire   [0:0] icmp_ln1498_1_fu_304_p2;
reg   [0:0] icmp_ln1498_1_reg_1282;
wire   [0:0] icmp_ln1498_2_fu_310_p2;
reg   [0:0] icmp_ln1498_2_reg_1286;
wire   [0:0] tmp_fu_316_p3;
reg   [0:0] tmp_reg_1290;
wire   [18:0] p_Val2_s_fu_330_p3;
reg   [18:0] p_Val2_s_reg_1295;
wire   [0:0] tmp_12_fu_338_p3;
wire   [20:0] t_V_fu_350_p3;
wire   [4:0] n_fu_364_p2;
reg   [4:0] n_reg_1313;
wire    ap_CS_fsm_state2;
wire   [0:0] isNeg_fu_380_p3;
reg   [0:0] isNeg_reg_1319;
wire   [0:0] icmp_ln143_fu_358_p2;
wire  signed [20:0] sext_ln1367_fu_402_p1;
reg  signed [20:0] sext_ln1367_reg_1324;
wire  signed [31:0] sext_ln1367_1_fu_406_p1;
reg  signed [31:0] sext_ln1367_1_reg_1329;
wire   [20:0] r_V_fu_426_p3;
reg   [20:0] r_V_reg_1334;
wire   [5:0] n2_fu_434_p3;
reg   [5:0] n2_reg_1341;
wire   [0:0] d_V_2_fu_475_p3;
reg   [0:0] d_V_2_reg_1352;
wire    ap_CS_fsm_state3;
wire   [20:0] r_V_11_fu_497_p3;
reg   [20:0] r_V_11_reg_1358;
wire   [20:0] tz_V_fu_538_p3;
reg   [20:0] tz_V_reg_1365;
wire   [20:0] zext_ln178_fu_546_p1;
reg   [20:0] zext_ln178_reg_1370;
wire    ap_CS_fsm_state4;
wire   [20:0] p_Val2_43_fu_554_p2;
reg   [20:0] p_Val2_43_reg_1375;
wire   [20:0] select_ln195_fu_580_p3;
reg   [20:0] select_ln195_reg_1381;
wire   [20:0] select_ln160_fu_616_p3;
wire    ap_CS_fsm_state5;
wire   [20:0] select_ln160_1_fu_623_p3;
wire    ap_CS_fsm_state6;
wire   [31:0] tmp_V_3_fu_649_p2;
reg   [31:0] tmp_V_3_reg_1401;
wire    ap_CS_fsm_state7;
wire   [0:0] icmp_ln885_fu_655_p2;
reg   [0:0] icmp_ln885_reg_1407;
reg   [0:0] p_Result_16_reg_1412;
wire   [31:0] tmp_V_4_fu_674_p3;
reg   [31:0] tmp_V_4_reg_1418;
wire    ap_CS_fsm_state8;
reg   [31:0] l_fu_690_p3;
reg   [31:0] l_reg_1426;
wire   [10:0] trunc_ln893_fu_698_p1;
reg   [10:0] trunc_ln893_reg_1431;
wire   [31:0] sub_ln894_fu_702_p2;
reg   [31:0] sub_ln894_reg_1436;
wire    ap_CS_fsm_state9;
wire   [31:0] or_ln_fu_799_p3;
reg   [31:0] or_ln_reg_1442;
wire   [0:0] icmp_ln908_fu_807_p2;
reg   [0:0] icmp_ln908_reg_1447;
reg   [62:0] m_s_reg_1452;
wire    ap_CS_fsm_state10;
reg   [0:0] tmp_16_reg_1457;
wire   [63:0] select_ln885_fu_923_p3;
reg   [63:0] select_ln885_reg_1462;
wire    ap_CS_fsm_state11;
wire   [63:0] grp_fu_293_p2;
reg   [63:0] v_assign_reg_1467;
wire    ap_CS_fsm_state42;
wire   [53:0] man_V_4_fu_981_p3;
reg   [53:0] man_V_4_reg_1472;
wire    ap_CS_fsm_state43;
wire  signed [11:0] sh_amt_fu_1019_p3;
reg  signed [11:0] sh_amt_reg_1477;
wire   [31:0] trunc_ln583_fu_1033_p1;
reg   [31:0] trunc_ln583_reg_1482;
wire   [0:0] and_ln603_fu_1135_p2;
reg   [0:0] and_ln603_reg_1487;
wire   [0:0] or_ln603_fu_1141_p2;
reg   [0:0] or_ln603_reg_1492;
wire   [31:0] select_ln603_1_fu_1147_p3;
reg   [31:0] select_ln603_1_reg_1497;
wire   [0:0] or_ln603_2_fu_1161_p2;
reg   [0:0] or_ln603_2_reg_1502;
wire   [32:0] ret_V_fu_1212_p2;
reg  signed [32:0] ret_V_reg_1507;
wire    ap_CS_fsm_state44;
wire    ap_CS_fsm_state45;
wire   [19:0] grp_fu_1232_p2;
reg   [19:0] sdiv_ln1148_reg_1522;
wire    ap_CS_fsm_state92;
wire   [31:0] xsqrtonex_V_fu_1241_p3;
reg   [31:0] xsqrtonex_V_reg_1527;
wire    ap_CS_fsm_state93;
wire  signed [14:0] sext_ln703_fu_1260_p1;
wire    ap_CS_fsm_state94;
wire    grp_generic_atan_32_8_s_fu_286_ap_ready;
wire    grp_generic_atan_32_8_s_fu_286_ap_done;
wire    grp_generic_atan_32_8_s_fu_286_ap_start;
wire    grp_generic_atan_32_8_s_fu_286_ap_idle;
wire   [31:0] grp_generic_atan_32_8_s_fu_286_ap_return;
reg   [20:0] p_Val2_39_reg_201;
reg   [20:0] p_Val2_41_reg_213;
reg   [20:0] p_Val2_38_reg_225;
reg   [20:0] p_Val2_47_reg_237;
reg   [4:0] n_0_i_reg_247;
reg   [14:0] phi_ln703_reg_258;
wire   [14:0] out_V_fu_1270_p3;
reg   [14:0] ap_phi_mux_agg_result_V_0_phi_fu_273_p8;
reg   [14:0] agg_result_V_0_reg_267;
wire    ap_CS_fsm_state95;
reg    grp_generic_atan_32_8_s_fu_286_ap_start_reg;
wire   [63:0] zext_ln201_fu_442_p1;
wire    ap_CS_fsm_state12;
wire   [18:0] sub_ln203_fu_324_p2;
wire   [14:0] trunc_ln728_fu_346_p1;
wire   [5:0] zext_ln143_fu_370_p1;
wire   [5:0] add_ln176_fu_374_p2;
wire   [5:0] sub_ln1367_fu_388_p2;
wire  signed [5:0] ush_fu_394_p3;
wire   [20:0] sext_ln1367_1cast_fu_410_p1;
wire   [20:0] shl_ln1299_fu_414_p2;
wire   [20:0] ashr_ln1333_fu_420_p2;
wire   [0:0] tmp_21_fu_461_p3;
wire   [0:0] icmp_ln1497_fu_447_p2;
wire   [0:0] d_V_1_fu_469_p2;
wire   [0:0] p_Result_15_fu_453_p3;
wire   [20:0] sext_ln1367_1cast27_fu_483_p1;
wire   [20:0] shl_ln1299_1_fu_486_p2;
wire   [20:0] ashr_ln1333_1_fu_492_p2;
wire   [17:0] tmp_7_fu_504_p4;
wire   [18:0] r_V_15_fu_514_p3;
wire   [20:0] zext_ln709_fu_522_p1;
wire   [20:0] sub_ln203_5_fu_526_p2;
wire   [20:0] add_ln203_fu_532_p2;
wire   [20:0] r_V_12_fu_549_p2;
wire   [20:0] zext_ln194_fu_560_p1;
wire   [20:0] r_V_14_fu_568_p2;
wire   [0:0] icmp_ln195_fu_563_p2;
wire   [20:0] add_ln703_2_fu_574_p2;
wire   [20:0] r_V_13_fu_588_p2;
wire   [20:0] p_Val2_45_fu_592_p2;
wire   [20:0] add_ln703_fu_598_p2;
wire   [20:0] sub_ln703_5_fu_607_p2;
wire   [20:0] sub_ln703_4_fu_602_p2;
wire   [20:0] add_ln703_1_fu_611_p2;
wire   [18:0] mul_ln703_fu_643_p0;
wire   [31:0] zext_ln703_fu_640_p1;
wire   [18:0] mul_ln703_fu_643_p1;
wire   [31:0] mul_ln703_fu_643_p2;
wire   [31:0] tmp_V_fu_669_p2;
reg   [31:0] p_Result_17_fu_680_p4;
wire   [31:0] lsb_index_fu_707_p2;
wire   [30:0] tmp_14_fu_713_p4;
wire   [5:0] trunc_ln897_fu_729_p1;
wire   [5:0] sub_ln897_fu_733_p2;
wire   [31:0] zext_ln897_fu_739_p1;
wire   [31:0] lshr_ln897_fu_743_p2;
wire   [31:0] p_Result_s_fu_749_p2;
wire   [0:0] icmp_ln897_fu_723_p2;
wire   [0:0] icmp_ln897_2_fu_754_p2;
wire   [0:0] tmp_15_fu_766_p3;
wire   [0:0] p_Result_2_fu_780_p3;
wire   [0:0] xor_ln899_fu_774_p2;
wire   [0:0] and_ln899_fu_787_p2;
wire   [0:0] a_fu_760_p2;
wire   [0:0] or_ln899_fu_793_p2;
wire   [31:0] add_ln908_fu_816_p2;
wire   [31:0] lshr_ln908_fu_821_p2;
wire   [31:0] sub_ln908_fu_830_p2;
wire   [63:0] m_fu_813_p1;
wire   [63:0] zext_ln908_2_fu_835_p1;
wire   [63:0] zext_ln908_fu_826_p1;
wire   [63:0] shl_ln908_fu_839_p2;
wire   [63:0] m_7_fu_845_p3;
wire   [63:0] zext_ln911_fu_852_p1;
wire   [63:0] m_8_fu_855_p2;
wire   [10:0] select_ln915_fu_882_p3;
wire   [10:0] sub_ln915_fu_889_p2;
wire   [10:0] add_ln915_fu_894_p2;
wire   [63:0] m_11_fu_879_p1;
wire   [11:0] tmp_4_fu_900_p3;
wire   [63:0] p_Result_18_fu_907_p5;
wire   [63:0] bitcast_ln729_fu_919_p1;
wire   [63:0] ireg_V_fu_930_p1;
wire   [10:0] exp_tmp_V_fu_945_p4;
wire   [51:0] trunc_ln565_fu_959_p1;
wire   [52:0] tmp_5_fu_963_p3;
wire   [53:0] p_Result_20_fu_971_p1;
wire   [0:0] p_Result_19_fu_937_p3;
wire   [53:0] man_V_3_fu_975_p2;
wire   [62:0] trunc_ln556_fu_933_p1;
wire   [11:0] zext_ln461_fu_955_p1;
wire   [11:0] F2_fu_995_p2;
wire   [0:0] icmp_ln581_fu_1001_p2;
wire   [11:0] add_ln581_fu_1007_p2;
wire   [11:0] sub_ln581_fu_1013_p2;
wire   [6:0] tmp_18_fu_1043_p4;
wire   [0:0] tmp_19_fu_1059_p3;
wire   [0:0] icmp_ln571_fu_989_p2;
wire   [0:0] icmp_ln582_fu_1027_p2;
wire   [0:0] xor_ln571_fu_1075_p2;
wire   [0:0] or_ln582_fu_1087_p2;
wire   [0:0] xor_ln582_fu_1093_p2;
wire   [0:0] icmp_ln585_fu_1037_p2;
wire   [0:0] and_ln581_fu_1099_p2;
wire   [0:0] xor_ln585_fu_1105_p2;
wire   [0:0] or_ln581_fu_1123_p2;
wire   [0:0] icmp_ln603_fu_1053_p2;
wire   [0:0] xor_ln581_fu_1129_p2;
wire   [0:0] and_ln585_1_fu_1117_p2;
wire   [0:0] and_ln585_fu_1111_p2;
wire   [31:0] select_ln588_fu_1067_p3;
wire   [0:0] and_ln582_fu_1081_p2;
wire   [0:0] or_ln603_1_fu_1155_p2;
wire  signed [31:0] sext_ln581_fu_1167_p1;
wire   [53:0] zext_ln586_fu_1170_p1;
wire   [53:0] ashr_ln586_fu_1174_p2;
wire   [31:0] shl_ln604_fu_1183_p2;
wire   [31:0] trunc_ln586_fu_1179_p1;
wire   [31:0] select_ln603_fu_1188_p3;
wire   [31:0] select_ln603_2_fu_1195_p3;
wire   [31:0] p_Val2_37_fu_1201_p3;
wire  signed [32:0] rhs_V_fu_1208_p1;
wire   [42:0] t_V_1_fu_1218_p3;
wire   [43:0] grp_fu_1232_p0;
wire   [19:0] trunc_ln731_fu_1238_p1;
wire   [13:0] trunc_ln708_8_fu_1250_p4;
wire   [14:0] sub_ln703_fu_1264_p2;
reg    grp_fu_1232_ap_start;
wire    grp_fu_1232_ap_done;
reg   [14:0] ap_return_preg;
reg   [94:0] ap_NS_fsm;

// power-on initialization
initial begin
#0 ap_CS_fsm = 95'd1;
#0 grp_generic_atan_32_8_s_fu_286_ap_start_reg = 1'b0;
#0 ap_return_preg = 15'd0;
end

generic_sincos_cobkb #(
    .DataWidth( 126 ),
    .AddressRange( 128 ),
    .AddressWidth( 7 ))
cordic_apfixed_circ_U(
    .clk(ap_clk),
    .reset(ap_rst),
    .address0(cordic_apfixed_circ_address0),
    .ce0(cordic_apfixed_circ_ce0),
    .q0(cordic_apfixed_circ_q0)
);

generic_atan_32_8_s grp_generic_atan_32_8_s_fu_286(
    .ap_clk(ap_clk),
    .ap_rst(ap_rst),
    .ap_start(grp_generic_atan_32_8_s_fu_286_ap_start),
    .ap_done(grp_generic_atan_32_8_s_fu_286_ap_done),
    .ap_idle(grp_generic_atan_32_8_s_fu_286_ap_idle),
    .ap_ready(grp_generic_atan_32_8_s_fu_286_ap_ready),
    .in_V(xsqrtonex_V_reg_1527),
    .ap_return(grp_generic_atan_32_8_s_fu_286_ap_return)
);

geo_dist_dsqrt_64hbi #(
    .ID( 1 ),
    .NUM_STAGE( 31 ),
    .din0_WIDTH( 64 ),
    .din1_WIDTH( 64 ),
    .dout_WIDTH( 64 ))
geo_dist_dsqrt_64hbi_U10(
    .clk(ap_clk),
    .reset(ap_rst),
    .din0(64'd0),
    .din1(select_ln885_reg_1462),
    .ce(1'b1),
    .dout(grp_fu_293_p2)
);

geo_dist_sdiv_44nibs #(
    .ID( 1 ),
    .NUM_STAGE( 48 ),
    .din0_WIDTH( 44 ),
    .din1_WIDTH( 33 ),
    .dout_WIDTH( 20 ))
geo_dist_sdiv_44nibs_U11(
    .clk(ap_clk),
    .reset(ap_rst),
    .start(grp_fu_1232_ap_start),
    .done(grp_fu_1232_ap_done),
    .din0(grp_fu_1232_p0),
    .din1(ret_V_reg_1507),
    .ce(1'b1),
    .dout(grp_fu_1232_p2)
);

always @ (posedge ap_clk) begin
    if (ap_rst == 1'b1) begin
        ap_CS_fsm <= ap_ST_fsm_state1;
    end else begin
        ap_CS_fsm <= ap_NS_fsm;
    end
end

always @ (posedge ap_clk) begin
    if (ap_rst == 1'b1) begin
        ap_return_preg <= 15'd0;
    end else begin
        if ((1'b1 == ap_CS_fsm_state95)) begin
            ap_return_preg <= ap_phi_mux_agg_result_V_0_phi_fu_273_p8;
        end
    end
end

always @ (posedge ap_clk) begin
    if (ap_rst == 1'b1) begin
        grp_generic_atan_32_8_s_fu_286_ap_start_reg <= 1'b0;
    end else begin
        if ((1'b1 == ap_CS_fsm_state93)) begin
            grp_generic_atan_32_8_s_fu_286_ap_start_reg <= 1'b1;
        end else if ((grp_generic_atan_32_8_s_fu_286_ap_ready == 1'b1)) begin
            grp_generic_atan_32_8_s_fu_286_ap_start_reg <= 1'b0;
        end
    end
end

always @ (posedge ap_clk) begin
    if (((1'b1 == ap_CS_fsm_state1) & (icmp_ln1498_2_fu_310_p2 == 1'd1) & (icmp_ln1498_1_fu_304_p2 == 1'd0) & (icmp_ln1498_fu_298_p2 == 1'd0) & (ap_start == 1'b1))) begin
        agg_result_V_0_reg_267 <= 15'd0;
    end else if (((1'b1 == ap_CS_fsm_state1) & (icmp_ln1498_1_fu_304_p2 == 1'd1) & (icmp_ln1498_fu_298_p2 == 1'd0) & (ap_start == 1'b1))) begin
        agg_result_V_0_reg_267 <= 15'd26334;
    end else if (((1'b1 == ap_CS_fsm_state1) & (icmp_ln1498_fu_298_p2 == 1'd1) & (ap_start == 1'b1))) begin
        agg_result_V_0_reg_267 <= 15'd6433;
    end else if (((1'b1 == ap_CS_fsm_state95) & (icmp_ln1498_2_reg_1286 == 1'd0) & (icmp_ln1498_1_reg_1282 == 1'd0) & (icmp_ln1498_reg_1278 == 1'd0))) begin
        agg_result_V_0_reg_267 <= out_V_fu_1270_p3;
    end
end

always @ (posedge ap_clk) begin
    if ((1'b1 == ap_CS_fsm_state5)) begin
        n_0_i_reg_247 <= n_reg_1313;
    end else if (((1'b1 == ap_CS_fsm_state1) & (tmp_12_fu_338_p3 == 1'd0) & (icmp_ln1498_2_fu_310_p2 == 1'd0) & (icmp_ln1498_1_fu_304_p2 == 1'd0) & (icmp_ln1498_fu_298_p2 == 1'd0) & (ap_start == 1'b1))) begin
        n_0_i_reg_247 <= 5'd0;
    end
end

always @ (posedge ap_clk) begin
    if ((1'b1 == ap_CS_fsm_state5)) begin
        p_Val2_38_reg_225 <= tz_V_reg_1365;
    end else if (((1'b1 == ap_CS_fsm_state1) & (tmp_12_fu_338_p3 == 1'd0) & (icmp_ln1498_2_fu_310_p2 == 1'd0) & (icmp_ln1498_1_fu_304_p2 == 1'd0) & (icmp_ln1498_fu_298_p2 == 1'd0) & (ap_start == 1'b1))) begin
        p_Val2_38_reg_225 <= 21'd0;
    end
end

always @ (posedge ap_clk) begin
    if ((1'b1 == ap_CS_fsm_state5)) begin
        p_Val2_39_reg_201 <= select_ln160_fu_616_p3;
    end else if (((1'b1 == ap_CS_fsm_state1) & (tmp_12_fu_338_p3 == 1'd0) & (icmp_ln1498_2_fu_310_p2 == 1'd0) & (icmp_ln1498_1_fu_304_p2 == 1'd0) & (icmp_ln1498_fu_298_p2 == 1'd0) & (ap_start == 1'b1))) begin
        p_Val2_39_reg_201 <= 21'd262144;
    end
end

always @ (posedge ap_clk) begin
    if ((1'b1 == ap_CS_fsm_state5)) begin
        p_Val2_41_reg_213 <= select_ln160_1_fu_623_p3;
    end else if (((1'b1 == ap_CS_fsm_state1) & (tmp_12_fu_338_p3 == 1'd0) & (icmp_ln1498_2_fu_310_p2 == 1'd0) & (icmp_ln1498_1_fu_304_p2 == 1'd0) & (icmp_ln1498_fu_298_p2 == 1'd0) & (ap_start == 1'b1))) begin
        p_Val2_41_reg_213 <= 21'd0;
    end
end

always @ (posedge ap_clk) begin
    if ((1'b1 == ap_CS_fsm_state5)) begin
        p_Val2_47_reg_237 <= select_ln195_reg_1381;
    end else if (((1'b1 == ap_CS_fsm_state1) & (tmp_12_fu_338_p3 == 1'd0) & (icmp_ln1498_2_fu_310_p2 == 1'd0) & (icmp_ln1498_1_fu_304_p2 == 1'd0) & (icmp_ln1498_fu_298_p2 == 1'd0) & (ap_start == 1'b1))) begin
        p_Val2_47_reg_237 <= t_V_fu_350_p3;
    end
end

always @ (posedge ap_clk) begin
    if (((grp_generic_atan_32_8_s_fu_286_ap_done == 1'b1) & (1'b1 == ap_CS_fsm_state94))) begin
        phi_ln703_reg_258 <= sext_ln703_fu_1260_p1;
    end else if ((1'b1 == ap_CS_fsm_state6)) begin
        phi_ln703_reg_258 <= {{p_Val2_38_reg_225[20:6]}};
    end
end

always @ (posedge ap_clk) begin
    if ((1'b1 == ap_CS_fsm_state43)) begin
        and_ln603_reg_1487 <= and_ln603_fu_1135_p2;
        man_V_4_reg_1472 <= man_V_4_fu_981_p3;
        or_ln603_2_reg_1502 <= or_ln603_2_fu_1161_p2;
        or_ln603_reg_1492 <= or_ln603_fu_1141_p2;
        select_ln603_1_reg_1497 <= select_ln603_1_fu_1147_p3;
        sh_amt_reg_1477 <= sh_amt_fu_1019_p3;
        trunc_ln583_reg_1482 <= trunc_ln583_fu_1033_p1;
    end
end

always @ (posedge ap_clk) begin
    if ((1'b1 == ap_CS_fsm_state3)) begin
        d_V_2_reg_1352 <= d_V_2_fu_475_p3;
        r_V_11_reg_1358 <= r_V_11_fu_497_p3;
        tz_V_reg_1365 <= tz_V_fu_538_p3;
    end
end

always @ (posedge ap_clk) begin
    if (((1'b1 == ap_CS_fsm_state1) & (icmp_ln1498_fu_298_p2 == 1'd0) & (ap_start == 1'b1))) begin
        icmp_ln1498_1_reg_1282 <= icmp_ln1498_1_fu_304_p2;
    end
end

always @ (posedge ap_clk) begin
    if (((1'b1 == ap_CS_fsm_state1) & (icmp_ln1498_1_fu_304_p2 == 1'd0) & (icmp_ln1498_fu_298_p2 == 1'd0) & (ap_start == 1'b1))) begin
        icmp_ln1498_2_reg_1286 <= icmp_ln1498_2_fu_310_p2;
    end
end

always @ (posedge ap_clk) begin
    if (((1'b1 == ap_CS_fsm_state1) & (ap_start == 1'b1))) begin
        icmp_ln1498_reg_1278 <= icmp_ln1498_fu_298_p2;
    end
end

always @ (posedge ap_clk) begin
    if ((1'b1 == ap_CS_fsm_state7)) begin
        icmp_ln885_reg_1407 <= icmp_ln885_fu_655_p2;
        p_Result_16_reg_1412 <= tmp_V_3_fu_649_p2[32'd31];
        tmp_V_3_reg_1401 <= tmp_V_3_fu_649_p2;
    end
end

always @ (posedge ap_clk) begin
    if (((1'b1 == ap_CS_fsm_state9) & (icmp_ln885_reg_1407 == 1'd0))) begin
        icmp_ln908_reg_1447 <= icmp_ln908_fu_807_p2;
        or_ln_reg_1442[0] <= or_ln_fu_799_p3[0];
        sub_ln894_reg_1436 <= sub_ln894_fu_702_p2;
    end
end

always @ (posedge ap_clk) begin
    if (((1'b1 == ap_CS_fsm_state2) & (icmp_ln143_fu_358_p2 == 1'd0))) begin
        isNeg_reg_1319 <= add_ln176_fu_374_p2[32'd5];
        n2_reg_1341[5 : 1] <= n2_fu_434_p3[5 : 1];
        r_V_reg_1334 <= r_V_fu_426_p3;
        sext_ln1367_1_reg_1329 <= sext_ln1367_1_fu_406_p1;
        sext_ln1367_reg_1324 <= sext_ln1367_fu_402_p1;
    end
end

always @ (posedge ap_clk) begin
    if (((1'b1 == ap_CS_fsm_state8) & (icmp_ln885_reg_1407 == 1'd0))) begin
        l_reg_1426 <= l_fu_690_p3;
        tmp_V_4_reg_1418 <= tmp_V_4_fu_674_p3;
        trunc_ln893_reg_1431 <= trunc_ln893_fu_698_p1;
    end
end

always @ (posedge ap_clk) begin
    if (((1'b1 == ap_CS_fsm_state10) & (icmp_ln885_reg_1407 == 1'd0))) begin
        m_s_reg_1452 <= {{m_8_fu_855_p2[63:1]}};
        tmp_16_reg_1457 <= m_8_fu_855_p2[32'd54];
    end
end

always @ (posedge ap_clk) begin
    if ((1'b1 == ap_CS_fsm_state2)) begin
        n_reg_1313 <= n_fu_364_p2;
    end
end

always @ (posedge ap_clk) begin
    if ((1'b1 == ap_CS_fsm_state4)) begin
        p_Val2_43_reg_1375 <= p_Val2_43_fu_554_p2;
        select_ln195_reg_1381 <= select_ln195_fu_580_p3;
        zext_ln178_reg_1370[4 : 0] <= zext_ln178_fu_546_p1[4 : 0];
    end
end

always @ (posedge ap_clk) begin
    if (((1'b1 == ap_CS_fsm_state1) & (icmp_ln1498_2_fu_310_p2 == 1'd0) & (icmp_ln1498_1_fu_304_p2 == 1'd0) & (icmp_ln1498_fu_298_p2 == 1'd0) & (ap_start == 1'b1))) begin
        p_Val2_s_reg_1295 <= p_Val2_s_fu_330_p3;
        tmp_reg_1290 <= in_V[32'd18];
    end
end

always @ (posedge ap_clk) begin
    if ((1'b1 == ap_CS_fsm_state44)) begin
        ret_V_reg_1507 <= ret_V_fu_1212_p2;
    end
end

always @ (posedge ap_clk) begin
    if ((1'b1 == ap_CS_fsm_state92)) begin
        sdiv_ln1148_reg_1522 <= grp_fu_1232_p2;
    end
end

always @ (posedge ap_clk) begin
    if ((1'b1 == ap_CS_fsm_state11)) begin
        select_ln885_reg_1462 <= select_ln885_fu_923_p3;
    end
end

always @ (posedge ap_clk) begin
    if ((1'b1 == ap_CS_fsm_state42)) begin
        v_assign_reg_1467 <= grp_fu_293_p2;
    end
end

always @ (posedge ap_clk) begin
    if ((1'b1 == ap_CS_fsm_state93)) begin
        xsqrtonex_V_reg_1527[31 : 12] <= xsqrtonex_V_fu_1241_p3[31 : 12];
    end
end

always @ (*) begin
    if (((1'b1 == ap_CS_fsm_state95) | ((ap_start == 1'b0) & (1'b1 == ap_CS_fsm_state1)))) begin
        ap_done = 1'b1;
    end else begin
        ap_done = 1'b0;
    end
end

always @ (*) begin
    if (((ap_start == 1'b0) & (1'b1 == ap_CS_fsm_state1))) begin
        ap_idle = 1'b1;
    end else begin
        ap_idle = 1'b0;
    end
end

always @ (*) begin
    if (((1'b1 == ap_CS_fsm_state95) & (icmp_ln1498_2_reg_1286 == 1'd0) & (icmp_ln1498_1_reg_1282 == 1'd0) & (icmp_ln1498_reg_1278 == 1'd0))) begin
        ap_phi_mux_agg_result_V_0_phi_fu_273_p8 = out_V_fu_1270_p3;
    end else begin
        ap_phi_mux_agg_result_V_0_phi_fu_273_p8 = agg_result_V_0_reg_267;
    end
end

always @ (*) begin
    if ((1'b1 == ap_CS_fsm_state95)) begin
        ap_ready = 1'b1;
    end else begin
        ap_ready = 1'b0;
    end
end

always @ (*) begin
    if ((1'b1 == ap_CS_fsm_state95)) begin
        ap_return = ap_phi_mux_agg_result_V_0_phi_fu_273_p8;
    end else begin
        ap_return = ap_return_preg;
    end
end

always @ (*) begin
    if ((1'b1 == ap_CS_fsm_state2)) begin
        cordic_apfixed_circ_address0 = zext_ln201_fu_442_p1;
    end else if ((1'b1 == ap_CS_fsm_state94)) begin
        cordic_apfixed_circ_address0 = 7'd0;
    end else begin
        cordic_apfixed_circ_address0 = 'bx;
    end
end

always @ (*) begin
    if ((1'b1 == ap_CS_fsm_state2)) begin
        cordic_apfixed_circ_ce0 = 1'b1;
    end else if ((1'b1 == ap_CS_fsm_state94)) begin
        cordic_apfixed_circ_ce0 = 1'b0;
    end else begin
        cordic_apfixed_circ_ce0 = 1'b0;
    end
end

always @ (*) begin
    if ((1'b1 == ap_CS_fsm_state45)) begin
        grp_fu_1232_ap_start = 1'b1;
    end else begin
        grp_fu_1232_ap_start = 1'b0;
    end
end

always @ (*) begin
    case (ap_CS_fsm)
        ap_ST_fsm_state1 : begin
            if (((1'b1 == ap_CS_fsm_state1) & (tmp_12_fu_338_p3 == 1'd0) & (icmp_ln1498_2_fu_310_p2 == 1'd0) & (icmp_ln1498_1_fu_304_p2 == 1'd0) & (icmp_ln1498_fu_298_p2 == 1'd0) & (ap_start == 1'b1))) begin
                ap_NS_fsm = ap_ST_fsm_state2;
            end else if (((1'b1 == ap_CS_fsm_state1) & (tmp_12_fu_338_p3 == 1'd1) & (icmp_ln1498_2_fu_310_p2 == 1'd0) & (icmp_ln1498_1_fu_304_p2 == 1'd0) & (icmp_ln1498_fu_298_p2 == 1'd0) & (ap_start == 1'b1))) begin
                ap_NS_fsm = ap_ST_fsm_state7;
            end else if (((1'b1 == ap_CS_fsm_state1) & (ap_start == 1'b1) & ((icmp_ln1498_fu_298_p2 == 1'd1) | ((icmp_ln1498_2_fu_310_p2 == 1'd1) | (icmp_ln1498_1_fu_304_p2 == 1'd1))))) begin
                ap_NS_fsm = ap_ST_fsm_state95;
            end else begin
                ap_NS_fsm = ap_ST_fsm_state1;
            end
        end
        ap_ST_fsm_state2 : begin
            if (((1'b1 == ap_CS_fsm_state2) & (icmp_ln143_fu_358_p2 == 1'd0))) begin
                ap_NS_fsm = ap_ST_fsm_state3;
            end else begin
                ap_NS_fsm = ap_ST_fsm_state6;
            end
        end
        ap_ST_fsm_state3 : begin
            ap_NS_fsm = ap_ST_fsm_state4;
        end
        ap_ST_fsm_state4 : begin
            ap_NS_fsm = ap_ST_fsm_state5;
        end
        ap_ST_fsm_state5 : begin
            ap_NS_fsm = ap_ST_fsm_state2;
        end
        ap_ST_fsm_state6 : begin
            ap_NS_fsm = ap_ST_fsm_state95;
        end
        ap_ST_fsm_state7 : begin
            ap_NS_fsm = ap_ST_fsm_state8;
        end
        ap_ST_fsm_state8 : begin
            ap_NS_fsm = ap_ST_fsm_state9;
        end
        ap_ST_fsm_state9 : begin
            ap_NS_fsm = ap_ST_fsm_state10;
        end
        ap_ST_fsm_state10 : begin
            ap_NS_fsm = ap_ST_fsm_state11;
        end
        ap_ST_fsm_state11 : begin
            ap_NS_fsm = ap_ST_fsm_state12;
        end
        ap_ST_fsm_state12 : begin
            ap_NS_fsm = ap_ST_fsm_state13;
        end
        ap_ST_fsm_state13 : begin
            ap_NS_fsm = ap_ST_fsm_state14;
        end
        ap_ST_fsm_state14 : begin
            ap_NS_fsm = ap_ST_fsm_state15;
        end
        ap_ST_fsm_state15 : begin
            ap_NS_fsm = ap_ST_fsm_state16;
        end
        ap_ST_fsm_state16 : begin
            ap_NS_fsm = ap_ST_fsm_state17;
        end
        ap_ST_fsm_state17 : begin
            ap_NS_fsm = ap_ST_fsm_state18;
        end
        ap_ST_fsm_state18 : begin
            ap_NS_fsm = ap_ST_fsm_state19;
        end
        ap_ST_fsm_state19 : begin
            ap_NS_fsm = ap_ST_fsm_state20;
        end
        ap_ST_fsm_state20 : begin
            ap_NS_fsm = ap_ST_fsm_state21;
        end
        ap_ST_fsm_state21 : begin
            ap_NS_fsm = ap_ST_fsm_state22;
        end
        ap_ST_fsm_state22 : begin
            ap_NS_fsm = ap_ST_fsm_state23;
        end
        ap_ST_fsm_state23 : begin
            ap_NS_fsm = ap_ST_fsm_state24;
        end
        ap_ST_fsm_state24 : begin
            ap_NS_fsm = ap_ST_fsm_state25;
        end
        ap_ST_fsm_state25 : begin
            ap_NS_fsm = ap_ST_fsm_state26;
        end
        ap_ST_fsm_state26 : begin
            ap_NS_fsm = ap_ST_fsm_state27;
        end
        ap_ST_fsm_state27 : begin
            ap_NS_fsm = ap_ST_fsm_state28;
        end
        ap_ST_fsm_state28 : begin
            ap_NS_fsm = ap_ST_fsm_state29;
        end
        ap_ST_fsm_state29 : begin
            ap_NS_fsm = ap_ST_fsm_state30;
        end
        ap_ST_fsm_state30 : begin
            ap_NS_fsm = ap_ST_fsm_state31;
        end
        ap_ST_fsm_state31 : begin
            ap_NS_fsm = ap_ST_fsm_state32;
        end
        ap_ST_fsm_state32 : begin
            ap_NS_fsm = ap_ST_fsm_state33;
        end
        ap_ST_fsm_state33 : begin
            ap_NS_fsm = ap_ST_fsm_state34;
        end
        ap_ST_fsm_state34 : begin
            ap_NS_fsm = ap_ST_fsm_state35;
        end
        ap_ST_fsm_state35 : begin
            ap_NS_fsm = ap_ST_fsm_state36;
        end
        ap_ST_fsm_state36 : begin
            ap_NS_fsm = ap_ST_fsm_state37;
        end
        ap_ST_fsm_state37 : begin
            ap_NS_fsm = ap_ST_fsm_state38;
        end
        ap_ST_fsm_state38 : begin
            ap_NS_fsm = ap_ST_fsm_state39;
        end
        ap_ST_fsm_state39 : begin
            ap_NS_fsm = ap_ST_fsm_state40;
        end
        ap_ST_fsm_state40 : begin
            ap_NS_fsm = ap_ST_fsm_state41;
        end
        ap_ST_fsm_state41 : begin
            ap_NS_fsm = ap_ST_fsm_state42;
        end
        ap_ST_fsm_state42 : begin
            ap_NS_fsm = ap_ST_fsm_state43;
        end
        ap_ST_fsm_state43 : begin
            ap_NS_fsm = ap_ST_fsm_state44;
        end
        ap_ST_fsm_state44 : begin
            ap_NS_fsm = ap_ST_fsm_state45;
        end
        ap_ST_fsm_state45 : begin
            ap_NS_fsm = ap_ST_fsm_state46;
        end
        ap_ST_fsm_state46 : begin
            ap_NS_fsm = ap_ST_fsm_state47;
        end
        ap_ST_fsm_state47 : begin
            ap_NS_fsm = ap_ST_fsm_state48;
        end
        ap_ST_fsm_state48 : begin
            ap_NS_fsm = ap_ST_fsm_state49;
        end
        ap_ST_fsm_state49 : begin
            ap_NS_fsm = ap_ST_fsm_state50;
        end
        ap_ST_fsm_state50 : begin
            ap_NS_fsm = ap_ST_fsm_state51;
        end
        ap_ST_fsm_state51 : begin
            ap_NS_fsm = ap_ST_fsm_state52;
        end
        ap_ST_fsm_state52 : begin
            ap_NS_fsm = ap_ST_fsm_state53;
        end
        ap_ST_fsm_state53 : begin
            ap_NS_fsm = ap_ST_fsm_state54;
        end
        ap_ST_fsm_state54 : begin
            ap_NS_fsm = ap_ST_fsm_state55;
        end
        ap_ST_fsm_state55 : begin
            ap_NS_fsm = ap_ST_fsm_state56;
        end
        ap_ST_fsm_state56 : begin
            ap_NS_fsm = ap_ST_fsm_state57;
        end
        ap_ST_fsm_state57 : begin
            ap_NS_fsm = ap_ST_fsm_state58;
        end
        ap_ST_fsm_state58 : begin
            ap_NS_fsm = ap_ST_fsm_state59;
        end
        ap_ST_fsm_state59 : begin
            ap_NS_fsm = ap_ST_fsm_state60;
        end
        ap_ST_fsm_state60 : begin
            ap_NS_fsm = ap_ST_fsm_state61;
        end
        ap_ST_fsm_state61 : begin
            ap_NS_fsm = ap_ST_fsm_state62;
        end
        ap_ST_fsm_state62 : begin
            ap_NS_fsm = ap_ST_fsm_state63;
        end
        ap_ST_fsm_state63 : begin
            ap_NS_fsm = ap_ST_fsm_state64;
        end
        ap_ST_fsm_state64 : begin
            ap_NS_fsm = ap_ST_fsm_state65;
        end
        ap_ST_fsm_state65 : begin
            ap_NS_fsm = ap_ST_fsm_state66;
        end
        ap_ST_fsm_state66 : begin
            ap_NS_fsm = ap_ST_fsm_state67;
        end
        ap_ST_fsm_state67 : begin
            ap_NS_fsm = ap_ST_fsm_state68;
        end
        ap_ST_fsm_state68 : begin
            ap_NS_fsm = ap_ST_fsm_state69;
        end
        ap_ST_fsm_state69 : begin
            ap_NS_fsm = ap_ST_fsm_state70;
        end
        ap_ST_fsm_state70 : begin
            ap_NS_fsm = ap_ST_fsm_state71;
        end
        ap_ST_fsm_state71 : begin
            ap_NS_fsm = ap_ST_fsm_state72;
        end
        ap_ST_fsm_state72 : begin
            ap_NS_fsm = ap_ST_fsm_state73;
        end
        ap_ST_fsm_state73 : begin
            ap_NS_fsm = ap_ST_fsm_state74;
        end
        ap_ST_fsm_state74 : begin
            ap_NS_fsm = ap_ST_fsm_state75;
        end
        ap_ST_fsm_state75 : begin
            ap_NS_fsm = ap_ST_fsm_state76;
        end
        ap_ST_fsm_state76 : begin
            ap_NS_fsm = ap_ST_fsm_state77;
        end
        ap_ST_fsm_state77 : begin
            ap_NS_fsm = ap_ST_fsm_state78;
        end
        ap_ST_fsm_state78 : begin
            ap_NS_fsm = ap_ST_fsm_state79;
        end
        ap_ST_fsm_state79 : begin
            ap_NS_fsm = ap_ST_fsm_state80;
        end
        ap_ST_fsm_state80 : begin
            ap_NS_fsm = ap_ST_fsm_state81;
        end
        ap_ST_fsm_state81 : begin
            ap_NS_fsm = ap_ST_fsm_state82;
        end
        ap_ST_fsm_state82 : begin
            ap_NS_fsm = ap_ST_fsm_state83;
        end
        ap_ST_fsm_state83 : begin
            ap_NS_fsm = ap_ST_fsm_state84;
        end
        ap_ST_fsm_state84 : begin
            ap_NS_fsm = ap_ST_fsm_state85;
        end
        ap_ST_fsm_state85 : begin
            ap_NS_fsm = ap_ST_fsm_state86;
        end
        ap_ST_fsm_state86 : begin
            ap_NS_fsm = ap_ST_fsm_state87;
        end
        ap_ST_fsm_state87 : begin
            ap_NS_fsm = ap_ST_fsm_state88;
        end
        ap_ST_fsm_state88 : begin
            ap_NS_fsm = ap_ST_fsm_state89;
        end
        ap_ST_fsm_state89 : begin
            ap_NS_fsm = ap_ST_fsm_state90;
        end
        ap_ST_fsm_state90 : begin
            ap_NS_fsm = ap_ST_fsm_state91;
        end
        ap_ST_fsm_state91 : begin
            ap_NS_fsm = ap_ST_fsm_state92;
        end
        ap_ST_fsm_state92 : begin
            ap_NS_fsm = ap_ST_fsm_state93;
        end
        ap_ST_fsm_state93 : begin
            ap_NS_fsm = ap_ST_fsm_state94;
        end
        ap_ST_fsm_state94 : begin
            if (((grp_generic_atan_32_8_s_fu_286_ap_done == 1'b1) & (1'b1 == ap_CS_fsm_state94))) begin
                ap_NS_fsm = ap_ST_fsm_state95;
            end else begin
                ap_NS_fsm = ap_ST_fsm_state94;
            end
        end
        ap_ST_fsm_state95 : begin
            ap_NS_fsm = ap_ST_fsm_state1;
        end
        default : begin
            ap_NS_fsm = 'bx;
        end
    endcase
end

assign F2_fu_995_p2 = (12'd1075 - zext_ln461_fu_955_p1);

assign a_fu_760_p2 = (icmp_ln897_fu_723_p2 & icmp_ln897_2_fu_754_p2);

assign add_ln176_fu_374_p2 = ($signed(6'd63) + $signed(zext_ln143_fu_370_p1));

assign add_ln203_fu_532_p2 = (zext_ln709_fu_522_p1 + p_Val2_38_reg_225);

assign add_ln581_fu_1007_p2 = ($signed(12'd4072) + $signed(F2_fu_995_p2));

assign add_ln703_1_fu_611_p2 = (r_V_reg_1334 + p_Val2_45_fu_592_p2);

assign add_ln703_2_fu_574_p2 = (r_V_14_fu_568_p2 + p_Val2_47_reg_237);

assign add_ln703_fu_598_p2 = (r_V_11_reg_1358 + p_Val2_43_reg_1375);

assign add_ln908_fu_816_p2 = ($signed(32'd4294967242) + $signed(sub_ln894_reg_1436));

assign add_ln915_fu_894_p2 = (select_ln915_fu_882_p3 + sub_ln915_fu_889_p2);

assign and_ln581_fu_1099_p2 = (xor_ln582_fu_1093_p2 & icmp_ln581_fu_1001_p2);

assign and_ln582_fu_1081_p2 = (xor_ln571_fu_1075_p2 & icmp_ln582_fu_1027_p2);

assign and_ln585_1_fu_1117_p2 = (icmp_ln585_fu_1037_p2 & and_ln581_fu_1099_p2);

assign and_ln585_fu_1111_p2 = (xor_ln585_fu_1105_p2 & and_ln581_fu_1099_p2);

assign and_ln603_fu_1135_p2 = (xor_ln581_fu_1129_p2 & icmp_ln603_fu_1053_p2);

assign and_ln899_fu_787_p2 = (xor_ln899_fu_774_p2 & p_Result_2_fu_780_p3);

assign ap_CS_fsm_state1 = ap_CS_fsm[32'd0];

assign ap_CS_fsm_state10 = ap_CS_fsm[32'd9];

assign ap_CS_fsm_state11 = ap_CS_fsm[32'd10];

assign ap_CS_fsm_state12 = ap_CS_fsm[32'd11];

assign ap_CS_fsm_state2 = ap_CS_fsm[32'd1];

assign ap_CS_fsm_state3 = ap_CS_fsm[32'd2];

assign ap_CS_fsm_state4 = ap_CS_fsm[32'd3];

assign ap_CS_fsm_state42 = ap_CS_fsm[32'd41];

assign ap_CS_fsm_state43 = ap_CS_fsm[32'd42];

assign ap_CS_fsm_state44 = ap_CS_fsm[32'd43];

assign ap_CS_fsm_state45 = ap_CS_fsm[32'd44];

assign ap_CS_fsm_state5 = ap_CS_fsm[32'd4];

assign ap_CS_fsm_state6 = ap_CS_fsm[32'd5];

assign ap_CS_fsm_state7 = ap_CS_fsm[32'd6];

assign ap_CS_fsm_state8 = ap_CS_fsm[32'd7];

assign ap_CS_fsm_state9 = ap_CS_fsm[32'd8];

assign ap_CS_fsm_state92 = ap_CS_fsm[32'd91];

assign ap_CS_fsm_state93 = ap_CS_fsm[32'd92];

assign ap_CS_fsm_state94 = ap_CS_fsm[32'd93];

assign ap_CS_fsm_state95 = ap_CS_fsm[32'd94];

assign ashr_ln1333_1_fu_492_p2 = $signed(p_Val2_41_reg_213) >>> sext_ln1367_reg_1324;

assign ashr_ln1333_fu_420_p2 = $signed(p_Val2_39_reg_201) >>> sext_ln1367_fu_402_p1;

assign ashr_ln586_fu_1174_p2 = $signed(man_V_4_reg_1472) >>> zext_ln586_fu_1170_p1;

assign bitcast_ln729_fu_919_p1 = p_Result_18_fu_907_p5;

assign d_V_1_fu_469_p2 = (tmp_21_fu_461_p3 ^ 1'd1);

assign d_V_2_fu_475_p3 = ((icmp_ln1497_fu_447_p2[0:0] === 1'b1) ? d_V_1_fu_469_p2 : p_Result_15_fu_453_p3);

assign exp_tmp_V_fu_945_p4 = {{ireg_V_fu_930_p1[62:52]}};

assign grp_fu_1232_p0 = t_V_1_fu_1218_p3;

assign grp_generic_atan_32_8_s_fu_286_ap_start = grp_generic_atan_32_8_s_fu_286_ap_start_reg;

assign icmp_ln143_fu_358_p2 = ((n_0_i_reg_247 == 5'd19) ? 1'b1 : 1'b0);

assign icmp_ln1497_fu_447_p2 = (($signed(p_Val2_41_reg_213) > $signed(p_Val2_47_reg_237)) ? 1'b1 : 1'b0);

assign icmp_ln1498_1_fu_304_p2 = ((in_V == 19'd520192) ? 1'b1 : 1'b0);

assign icmp_ln1498_2_fu_310_p2 = ((in_V == 19'd0) ? 1'b1 : 1'b0);

assign icmp_ln1498_fu_298_p2 = ((in_V == 19'd4096) ? 1'b1 : 1'b0);

assign icmp_ln195_fu_563_p2 = ((n2_reg_1341 < 6'd21) ? 1'b1 : 1'b0);

assign icmp_ln571_fu_989_p2 = ((trunc_ln556_fu_933_p1 == 63'd0) ? 1'b1 : 1'b0);

assign icmp_ln581_fu_1001_p2 = (($signed(F2_fu_995_p2) > $signed(12'd24)) ? 1'b1 : 1'b0);

assign icmp_ln582_fu_1027_p2 = ((F2_fu_995_p2 == 12'd24) ? 1'b1 : 1'b0);

assign icmp_ln585_fu_1037_p2 = ((sh_amt_fu_1019_p3 < 12'd54) ? 1'b1 : 1'b0);

assign icmp_ln603_fu_1053_p2 = ((tmp_18_fu_1043_p4 == 7'd0) ? 1'b1 : 1'b0);

assign icmp_ln885_fu_655_p2 = ((mul_ln703_fu_643_p2 == 32'd16777216) ? 1'b1 : 1'b0);

assign icmp_ln897_2_fu_754_p2 = ((p_Result_s_fu_749_p2 != 32'd0) ? 1'b1 : 1'b0);

assign icmp_ln897_fu_723_p2 = (($signed(tmp_14_fu_713_p4) > $signed(31'd0)) ? 1'b1 : 1'b0);

assign icmp_ln908_fu_807_p2 = (($signed(lsb_index_fu_707_p2) > $signed(32'd0)) ? 1'b1 : 1'b0);

assign ireg_V_fu_930_p1 = v_assign_reg_1467;

assign isNeg_fu_380_p3 = add_ln176_fu_374_p2[32'd5];


always @ (p_Result_17_fu_680_p4) begin
    if (p_Result_17_fu_680_p4[0] == 1'b1) begin
        l_fu_690_p3 = 32'd0;
    end else if (p_Result_17_fu_680_p4[1] == 1'b1) begin
        l_fu_690_p3 = 32'd1;
    end else if (p_Result_17_fu_680_p4[2] == 1'b1) begin
        l_fu_690_p3 = 32'd2;
    end else if (p_Result_17_fu_680_p4[3] == 1'b1) begin
        l_fu_690_p3 = 32'd3;
    end else if (p_Result_17_fu_680_p4[4] == 1'b1) begin
        l_fu_690_p3 = 32'd4;
    end else if (p_Result_17_fu_680_p4[5] == 1'b1) begin
        l_fu_690_p3 = 32'd5;
    end else if (p_Result_17_fu_680_p4[6] == 1'b1) begin
        l_fu_690_p3 = 32'd6;
    end else if (p_Result_17_fu_680_p4[7] == 1'b1) begin
        l_fu_690_p3 = 32'd7;
    end else if (p_Result_17_fu_680_p4[8] == 1'b1) begin
        l_fu_690_p3 = 32'd8;
    end else if (p_Result_17_fu_680_p4[9] == 1'b1) begin
        l_fu_690_p3 = 32'd9;
    end else if (p_Result_17_fu_680_p4[10] == 1'b1) begin
        l_fu_690_p3 = 32'd10;
    end else if (p_Result_17_fu_680_p4[11] == 1'b1) begin
        l_fu_690_p3 = 32'd11;
    end else if (p_Result_17_fu_680_p4[12] == 1'b1) begin
        l_fu_690_p3 = 32'd12;
    end else if (p_Result_17_fu_680_p4[13] == 1'b1) begin
        l_fu_690_p3 = 32'd13;
    end else if (p_Result_17_fu_680_p4[14] == 1'b1) begin
        l_fu_690_p3 = 32'd14;
    end else if (p_Result_17_fu_680_p4[15] == 1'b1) begin
        l_fu_690_p3 = 32'd15;
    end else if (p_Result_17_fu_680_p4[16] == 1'b1) begin
        l_fu_690_p3 = 32'd16;
    end else if (p_Result_17_fu_680_p4[17] == 1'b1) begin
        l_fu_690_p3 = 32'd17;
    end else if (p_Result_17_fu_680_p4[18] == 1'b1) begin
        l_fu_690_p3 = 32'd18;
    end else if (p_Result_17_fu_680_p4[19] == 1'b1) begin
        l_fu_690_p3 = 32'd19;
    end else if (p_Result_17_fu_680_p4[20] == 1'b1) begin
        l_fu_690_p3 = 32'd20;
    end else if (p_Result_17_fu_680_p4[21] == 1'b1) begin
        l_fu_690_p3 = 32'd21;
    end else if (p_Result_17_fu_680_p4[22] == 1'b1) begin
        l_fu_690_p3 = 32'd22;
    end else if (p_Result_17_fu_680_p4[23] == 1'b1) begin
        l_fu_690_p3 = 32'd23;
    end else if (p_Result_17_fu_680_p4[24] == 1'b1) begin
        l_fu_690_p3 = 32'd24;
    end else if (p_Result_17_fu_680_p4[25] == 1'b1) begin
        l_fu_690_p3 = 32'd25;
    end else if (p_Result_17_fu_680_p4[26] == 1'b1) begin
        l_fu_690_p3 = 32'd26;
    end else if (p_Result_17_fu_680_p4[27] == 1'b1) begin
        l_fu_690_p3 = 32'd27;
    end else if (p_Result_17_fu_680_p4[28] == 1'b1) begin
        l_fu_690_p3 = 32'd28;
    end else if (p_Result_17_fu_680_p4[29] == 1'b1) begin
        l_fu_690_p3 = 32'd29;
    end else if (p_Result_17_fu_680_p4[30] == 1'b1) begin
        l_fu_690_p3 = 32'd30;
    end else if (p_Result_17_fu_680_p4[31] == 1'b1) begin
        l_fu_690_p3 = 32'd31;
    end else begin
        l_fu_690_p3 = 32'd32;
    end
end

assign lsb_index_fu_707_p2 = ($signed(32'd4294967243) + $signed(sub_ln894_fu_702_p2));

assign lshr_ln897_fu_743_p2 = 32'd4294967295 >> zext_ln897_fu_739_p1;

assign lshr_ln908_fu_821_p2 = tmp_V_4_reg_1418 >> add_ln908_fu_816_p2;

assign m_11_fu_879_p1 = m_s_reg_1452;

assign m_7_fu_845_p3 = ((icmp_ln908_reg_1447[0:0] === 1'b1) ? zext_ln908_fu_826_p1 : shl_ln908_fu_839_p2);

assign m_8_fu_855_p2 = (m_7_fu_845_p3 + zext_ln911_fu_852_p1);

assign m_fu_813_p1 = tmp_V_4_reg_1418;

assign man_V_3_fu_975_p2 = (54'd0 - p_Result_20_fu_971_p1);

assign man_V_4_fu_981_p3 = ((p_Result_19_fu_937_p3[0:0] === 1'b1) ? man_V_3_fu_975_p2 : p_Result_20_fu_971_p1);

assign mul_ln703_fu_643_p0 = zext_ln703_fu_640_p1;

assign mul_ln703_fu_643_p1 = zext_ln703_fu_640_p1;

assign mul_ln703_fu_643_p2 = (mul_ln703_fu_643_p0 * mul_ln703_fu_643_p1);

assign n2_fu_434_p3 = {{n_0_i_reg_247}, {1'd0}};

assign n_fu_364_p2 = (n_0_i_reg_247 + 5'd1);

assign or_ln581_fu_1123_p2 = (or_ln582_fu_1087_p2 | icmp_ln581_fu_1001_p2);

assign or_ln582_fu_1087_p2 = (icmp_ln582_fu_1027_p2 | icmp_ln571_fu_989_p2);

assign or_ln603_1_fu_1155_p2 = (and_ln585_fu_1111_p2 | and_ln582_fu_1081_p2);

assign or_ln603_2_fu_1161_p2 = (or_ln603_fu_1141_p2 | or_ln603_1_fu_1155_p2);

assign or_ln603_fu_1141_p2 = (and_ln603_fu_1135_p2 | and_ln585_1_fu_1117_p2);

assign or_ln899_fu_793_p2 = (and_ln899_fu_787_p2 | a_fu_760_p2);

assign or_ln_fu_799_p3 = {{31'd0}, {or_ln899_fu_793_p2}};

assign out_V_fu_1270_p3 = ((tmp_reg_1290[0:0] === 1'b1) ? sub_ln703_fu_1264_p2 : phi_ln703_reg_258);

assign p_Result_15_fu_453_p3 = p_Val2_39_reg_201[32'd20];

integer ap_tvar_int_0;

always @ (tmp_V_4_fu_674_p3) begin
    for (ap_tvar_int_0 = 32 - 1; ap_tvar_int_0 >= 0; ap_tvar_int_0 = ap_tvar_int_0 - 1) begin
        if (ap_tvar_int_0 > 31 - 0) begin
            p_Result_17_fu_680_p4[ap_tvar_int_0] = 1'b0;
        end else begin
            p_Result_17_fu_680_p4[ap_tvar_int_0] = tmp_V_4_fu_674_p3[31 - ap_tvar_int_0];
        end
    end
end

assign p_Result_18_fu_907_p5 = {{tmp_4_fu_900_p3}, {m_11_fu_879_p1[51:0]}};

assign p_Result_19_fu_937_p3 = ireg_V_fu_930_p1[32'd63];

assign p_Result_20_fu_971_p1 = tmp_5_fu_963_p3;

assign p_Result_2_fu_780_p3 = tmp_V_4_reg_1418[lsb_index_fu_707_p2];

assign p_Result_s_fu_749_p2 = (tmp_V_4_reg_1418 & lshr_ln897_fu_743_p2);

assign p_Val2_37_fu_1201_p3 = ((or_ln603_2_reg_1502[0:0] === 1'b1) ? select_ln603_2_fu_1195_p3 : 32'd0);

assign p_Val2_43_fu_554_p2 = (p_Val2_39_reg_201 - r_V_12_fu_549_p2);

assign p_Val2_45_fu_592_p2 = (p_Val2_41_reg_213 - r_V_13_fu_588_p2);

assign p_Val2_s_fu_330_p3 = ((tmp_fu_316_p3[0:0] === 1'b1) ? sub_ln203_fu_324_p2 : in_V);

assign r_V_11_fu_497_p3 = ((isNeg_reg_1319[0:0] === 1'b1) ? shl_ln1299_1_fu_486_p2 : ashr_ln1333_1_fu_492_p2);

assign r_V_12_fu_549_p2 = $signed(r_V_reg_1334) >>> zext_ln178_fu_546_p1;

assign r_V_13_fu_588_p2 = $signed(r_V_11_reg_1358) >>> zext_ln178_reg_1370;

assign r_V_14_fu_568_p2 = $signed(p_Val2_47_reg_237) >>> zext_ln194_fu_560_p1;

assign r_V_15_fu_514_p3 = {{tmp_7_fu_504_p4}, {1'd0}};

assign r_V_fu_426_p3 = ((isNeg_fu_380_p3[0:0] === 1'b1) ? shl_ln1299_fu_414_p2 : ashr_ln1333_fu_420_p2);

assign ret_V_fu_1212_p2 = ($signed(33'd16777216) + $signed(rhs_V_fu_1208_p1));

assign rhs_V_fu_1208_p1 = $signed(p_Val2_37_fu_1201_p3);

assign select_ln160_1_fu_623_p3 = ((d_V_2_reg_1352[0:0] === 1'b1) ? sub_ln703_4_fu_602_p2 : add_ln703_1_fu_611_p2);

assign select_ln160_fu_616_p3 = ((d_V_2_reg_1352[0:0] === 1'b1) ? add_ln703_fu_598_p2 : sub_ln703_5_fu_607_p2);

assign select_ln195_fu_580_p3 = ((icmp_ln195_fu_563_p2[0:0] === 1'b1) ? add_ln703_2_fu_574_p2 : p_Val2_47_reg_237);

assign select_ln588_fu_1067_p3 = ((tmp_19_fu_1059_p3[0:0] === 1'b1) ? 32'd4294967295 : 32'd0);

assign select_ln603_1_fu_1147_p3 = ((and_ln585_fu_1111_p2[0:0] === 1'b1) ? select_ln588_fu_1067_p3 : trunc_ln583_fu_1033_p1);

assign select_ln603_2_fu_1195_p3 = ((or_ln603_reg_1492[0:0] === 1'b1) ? select_ln603_fu_1188_p3 : select_ln603_1_reg_1497);

assign select_ln603_fu_1188_p3 = ((and_ln603_reg_1487[0:0] === 1'b1) ? shl_ln604_fu_1183_p2 : trunc_ln586_fu_1179_p1);

assign select_ln885_fu_923_p3 = ((icmp_ln885_reg_1407[0:0] === 1'b1) ? 64'd0 : bitcast_ln729_fu_919_p1);

assign select_ln915_fu_882_p3 = ((tmp_16_reg_1457[0:0] === 1'b1) ? 11'd1023 : 11'd1022);

assign sext_ln1367_1_fu_406_p1 = ush_fu_394_p3;

assign sext_ln1367_1cast27_fu_483_p1 = sext_ln1367_1_reg_1329[20:0];

assign sext_ln1367_1cast_fu_410_p1 = sext_ln1367_1_fu_406_p1[20:0];

assign sext_ln1367_fu_402_p1 = ush_fu_394_p3;

assign sext_ln581_fu_1167_p1 = sh_amt_reg_1477;

assign sext_ln703_fu_1260_p1 = $signed(trunc_ln708_8_fu_1250_p4);

assign sh_amt_fu_1019_p3 = ((icmp_ln581_fu_1001_p2[0:0] === 1'b1) ? add_ln581_fu_1007_p2 : sub_ln581_fu_1013_p2);

assign shl_ln1299_1_fu_486_p2 = p_Val2_41_reg_213 << sext_ln1367_1cast27_fu_483_p1;

assign shl_ln1299_fu_414_p2 = p_Val2_39_reg_201 << sext_ln1367_1cast_fu_410_p1;

assign shl_ln604_fu_1183_p2 = trunc_ln583_reg_1482 << sext_ln581_fu_1167_p1;

assign shl_ln908_fu_839_p2 = m_fu_813_p1 << zext_ln908_2_fu_835_p1;

assign sub_ln1367_fu_388_p2 = (6'd1 - zext_ln143_fu_370_p1);

assign sub_ln203_5_fu_526_p2 = (p_Val2_38_reg_225 - zext_ln709_fu_522_p1);

assign sub_ln203_fu_324_p2 = (19'd0 - in_V);

assign sub_ln581_fu_1013_p2 = (12'd24 - F2_fu_995_p2);

assign sub_ln703_4_fu_602_p2 = (p_Val2_45_fu_592_p2 - r_V_reg_1334);

assign sub_ln703_5_fu_607_p2 = (p_Val2_43_reg_1375 - r_V_11_reg_1358);

assign sub_ln703_fu_1264_p2 = (15'd0 - phi_ln703_reg_258);

assign sub_ln894_fu_702_p2 = (32'd32 - l_reg_1426);

assign sub_ln897_fu_733_p2 = (6'd22 - trunc_ln897_fu_729_p1);

assign sub_ln908_fu_830_p2 = (32'd54 - sub_ln894_reg_1436);

assign sub_ln915_fu_889_p2 = (11'd8 - trunc_ln893_reg_1431);

assign t_V_1_fu_1218_p3 = {{p_Val2_s_reg_1295}, {24'd0}};

assign t_V_fu_350_p3 = {{trunc_ln728_fu_346_p1}, {6'd0}};

assign tmp_12_fu_338_p3 = p_Val2_s_fu_330_p3[32'd11];

assign tmp_14_fu_713_p4 = {{lsb_index_fu_707_p2[31:1]}};

assign tmp_15_fu_766_p3 = lsb_index_fu_707_p2[32'd31];

assign tmp_18_fu_1043_p4 = {{sh_amt_fu_1019_p3[11:5]}};

assign tmp_19_fu_1059_p3 = ireg_V_fu_930_p1[32'd63];

assign tmp_21_fu_461_p3 = p_Val2_39_reg_201[32'd20];

assign tmp_4_fu_900_p3 = {{p_Result_16_reg_1412}, {add_ln915_fu_894_p2}};

assign tmp_5_fu_963_p3 = {{1'd1}, {trunc_ln565_fu_959_p1}};

assign tmp_7_fu_504_p4 = {{cordic_apfixed_circ_q0[125:108]}};

assign tmp_V_3_fu_649_p2 = (32'd16777216 - mul_ln703_fu_643_p2);

assign tmp_V_4_fu_674_p3 = ((p_Result_16_reg_1412[0:0] === 1'b1) ? tmp_V_fu_669_p2 : tmp_V_3_reg_1401);

assign tmp_V_fu_669_p2 = (32'd0 - tmp_V_3_reg_1401);

assign tmp_fu_316_p3 = in_V[32'd18];

assign trunc_ln556_fu_933_p1 = ireg_V_fu_930_p1[62:0];

assign trunc_ln565_fu_959_p1 = ireg_V_fu_930_p1[51:0];

assign trunc_ln583_fu_1033_p1 = man_V_4_fu_981_p3[31:0];

assign trunc_ln586_fu_1179_p1 = ashr_ln586_fu_1174_p2[31:0];

assign trunc_ln708_8_fu_1250_p4 = {{grp_generic_atan_32_8_s_fu_286_ap_return[30:17]}};

assign trunc_ln728_fu_346_p1 = p_Val2_s_fu_330_p3[14:0];

assign trunc_ln731_fu_1238_p1 = sdiv_ln1148_reg_1522[19:0];

assign trunc_ln893_fu_698_p1 = l_fu_690_p3[10:0];

assign trunc_ln897_fu_729_p1 = sub_ln894_fu_702_p2[5:0];

assign tz_V_fu_538_p3 = ((d_V_2_fu_475_p3[0:0] === 1'b1) ? sub_ln203_5_fu_526_p2 : add_ln203_fu_532_p2);

assign ush_fu_394_p3 = ((isNeg_fu_380_p3[0:0] === 1'b1) ? sub_ln1367_fu_388_p2 : add_ln176_fu_374_p2);

assign xor_ln571_fu_1075_p2 = (icmp_ln571_fu_989_p2 ^ 1'd1);

assign xor_ln581_fu_1129_p2 = (or_ln581_fu_1123_p2 ^ 1'd1);

assign xor_ln582_fu_1093_p2 = (or_ln582_fu_1087_p2 ^ 1'd1);

assign xor_ln585_fu_1105_p2 = (icmp_ln585_fu_1037_p2 ^ 1'd1);

assign xor_ln899_fu_774_p2 = (tmp_15_fu_766_p3 ^ 1'd1);

assign xsqrtonex_V_fu_1241_p3 = {{trunc_ln731_fu_1238_p1}, {12'd0}};

assign zext_ln143_fu_370_p1 = n_0_i_reg_247;

assign zext_ln178_fu_546_p1 = n_reg_1313;

assign zext_ln194_fu_560_p1 = n2_reg_1341;

assign zext_ln201_fu_442_p1 = n_0_i_reg_247;

assign zext_ln461_fu_955_p1 = exp_tmp_V_fu_945_p4;

assign zext_ln586_fu_1170_p1 = $unsigned(sext_ln581_fu_1167_p1);

assign zext_ln703_fu_640_p1 = p_Val2_s_reg_1295;

assign zext_ln709_fu_522_p1 = r_V_15_fu_514_p3;

assign zext_ln897_fu_739_p1 = sub_ln897_fu_733_p2;

assign zext_ln908_2_fu_835_p1 = sub_ln908_fu_830_p2;

assign zext_ln908_fu_826_p1 = lshr_ln908_fu_821_p2;

assign zext_ln911_fu_852_p1 = or_ln_reg_1442;

always @ (posedge ap_clk) begin
    n2_reg_1341[0] <= 1'b0;
    zext_ln178_reg_1370[20:5] <= 16'b0000000000000000;
    or_ln_reg_1442[31:1] <= 31'b0000000000000000000000000000000;
    xsqrtonex_V_reg_1527[11:0] <= 12'b000000000000;
end

endmodule //generic_asin_20_8_s
